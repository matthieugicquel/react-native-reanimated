"use strict";(self.webpackChunkdocs_reanimated=self.webpackChunkdocs_reanimated||[]).push([[5047],{15680:(e,n,t)=>{t.d(n,{xA:()=>s,yg:()=>y});var i=t(96540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=i.createContext({}),m=function(e){var n=i.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},s=function(e){var n=m(e.components);return i.createElement(c.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},u=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=m(t),u=a,y=d["".concat(c,".").concat(u)]||d[u]||p[u]||r;return t?i.createElement(y,o(o({ref:n},s),{},{components:t})):i.createElement(y,o({ref:n},s))}));function y(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,o=new Array(r);o[0]=u;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[d]="string"==typeof e?e:a,o[1]=l;for(var m=2;m<r;m++)o[m]=t[m];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}u.displayName="MDXCreateElement"},74414:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>x,contentTitle:()=>w,default:()=>k,frontMatter:()=>v,metadata:()=>b,toc:()=>C});var i=t(58168),a=t(96540),r=t(15680),o=t(9176),l=t(72188),c=t(52773);const m={from:{width:120},to:{width:240}};function s(){return a.createElement(o.A,{style:d.container},a.createElement(c.default.View,{style:[d.box,{animationName:m,animationDuration:"1s",animationIterationCount:"infinite",animationTimingFunction:"easeInOut",animationDirection:"alternate"}]}))}const d=l.A.create({container:{flex:1,alignItems:"center",justifyContent:"center",height:"100%"},box:{height:120,width:120,backgroundColor:"#87cce8",margin:64}}),p="import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport Animated, { CSSAnimationKeyframes } from 'react-native-reanimated';\n\nconst grow: CSSAnimationKeyframes = {\n  from: { width: 120 },\n  to: { width: 240 },\n};\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Animated.View\n        style={[\n          styles.box,\n          {\n            animationName: grow,\n            animationDuration: '1s',\n            animationIterationCount: 'infinite',\n            animationTimingFunction: 'easeInOut',\n            // highlight-next-line\n            animationDirection: 'alternate',\n          },\n        ]}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n  },\n  box: {\n    height: 120,\n    width: 120,\n    backgroundColor: '#87cce8',\n    margin: 64,\n  },\n});\n",u=["#fa7f7c","#b58df1","#ffe780","#82cab2","#87cce8"],y={"0%":{transform:[{rotateY:"0deg"}]},"100%":{transform:[{rotateY:"180deg"}]}};function f(){return a.createElement(o.A,{style:g.container},a.createElement(o.A,{style:g.row},u.map(((e,n)=>a.createElement(c.default.View,{key:e,style:[g.box,{backgroundColor:e,animationName:y,animationDuration:2e3,animationTimingFunction:"ease",animationDelay:250*n,animationDirection:"alternateReverse",animationIterationCount:"infinite"}]})))))}const g=l.A.create({container:{flex:1,alignItems:"center",justifyContent:"center",height:"100%"},row:{flexDirection:"row",gap:16},box:{width:100,height:100,marginVertical:64}}),h="import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport Animated, { CSSAnimationKeyframes } from 'react-native-reanimated';\n\nconst COLORS = ['#fa7f7c', '#b58df1', '#ffe780', '#82cab2', '#87cce8'];\n\nconst rotate: CSSAnimationKeyframes = {\n  '0%': {\n    transform: [{ rotateY: '0deg' }],\n  },\n  '100%': {\n    transform: [{ rotateY: '180deg' }],\n  },\n};\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <View style={styles.row}>\n        {COLORS.map((color, id) => (\n          <Animated.View\n            key={color}\n            style={[\n              styles.box,\n              {\n                backgroundColor: color,\n                animationName: rotate,\n                animationDuration: 2000,\n                animationTimingFunction: 'ease',\n                animationDelay: 250 * id,\n                // highlight-next-line\n                animationDirection: 'alternateReverse',\n                animationIterationCount: 'infinite',\n              },\n            ]}\n          />\n        ))}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n  },\n  row: {\n    flexDirection: 'row',\n    gap: 16,\n  },\n  box: {\n    width: 100,\n    height: 100,\n    marginVertical: 64,\n  },\n});\n",v={sidebar_position:5},w="animationDirection",b={unversionedId:"css-animations/animation-direction",id:"css-animations/animation-direction",title:"animationDirection",description:"animationDirection lets you specify which direction the animation should run. Defaults to normal.",source:"@site/docs/css-animations/animation-direction.mdx",sourceDirName:"css-animations",slug:"/css-animations/animation-direction",permalink:"/react-native-reanimated/docs/next/css-animations/animation-direction",draft:!1,editUrl:"https://github.com/software-mansion/react-native-reanimated/edit/main/packages/docs-reanimated/docs/css-animations/animation-direction.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"animationTimingFunction",permalink:"/react-native-reanimated/docs/next/css-animations/animation-timing-function"},next:{title:"animationIterationCount",permalink:"/react-native-reanimated/docs/next/css-animations/animation-iteration-count"}},x={},C=[{value:"Reference",id:"reference",level:2},{value:"Values",id:"values",level:3},{value:"<code>normal</code>",id:"normal",level:4},{value:"<code>reverse</code>",id:"reverse",level:4},{value:"<code>alternate</code>",id:"alternate",level:4},{value:"<code>alternateReverse</code>",id:"alternatereverse",level:4},{value:"<code>&lt;animation direction[]&gt;</code>",id:"animation-direction",level:4},{value:"Example",id:"example",level:2},{value:"Platform compatibility",id:"platform-compatibility",level:2}],D=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.yg)("div",n)},O=D("InteractiveExample"),N=D("PlatformCompatibility"),S={toc:C},A="wrapper";function k(e){let{components:n,...t}=e;return(0,r.yg)(A,(0,i.A)({},S,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"animationdirection"},"animationDirection"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"animationDirection")," lets you specify which direction the animation should run. Defaults to ",(0,r.yg)("inlineCode",{parentName:"p"},"normal"),"."),(0,r.yg)(O,{src:p,component:s,mdxType:"InteractiveExample"}),(0,r.yg)("h2",{id:"reference"},"Reference"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"function App() {\n  return (\n    <Animated.View\n      style={{\n        animationName: {\n          from: { width: 120 },\n          to: { width: 240 },\n        },\n        animationDuration: '1s',\n        animationIterationCount: 'infinite',\n        // highlight-next-line\n        animationDirection: 'alternate',\n      }}\n    />\n  );\n}\n")),(0,r.yg)("details",null,(0,r.yg)("summary",null,"Type definitions"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"type CSSAnimationDirection =\n  | 'normal'\n  | 'reverse'\n  | 'alternate'\n  | 'alternateReverse';\n\nanimationDirection: CSSAnimationDirection | CSSAnimationDirection[];\n"))),(0,r.yg)("h3",{id:"values"},"Values"),(0,r.yg)("h4",{id:"normal"},(0,r.yg)("inlineCode",{parentName:"h4"},"normal")),(0,r.yg)("p",null,"Runs the animation forwards."),(0,r.yg)("h4",{id:"reverse"},(0,r.yg)("inlineCode",{parentName:"h4"},"reverse")),(0,r.yg)("p",null,"Runs the animation backwards."),(0,r.yg)("h4",{id:"alternate"},(0,r.yg)("inlineCode",{parentName:"h4"},"alternate")),(0,r.yg)("p",null,"For each animation iteration, the animation alternates between running forwards and backwards."),(0,r.yg)("h4",{id:"alternatereverse"},(0,r.yg)("inlineCode",{parentName:"h4"},"alternateReverse")),(0,r.yg)("p",null,"For each animation iteration, the animation alternates between running forwards and backwards but the first iteration runs backwards."),(0,r.yg)("h4",{id:"animation-direction"},(0,r.yg)("inlineCode",{parentName:"h4"},"<animation direction[]>")),(0,r.yg)("p",null,"An array of animation direction values. The order in this array corresponds to the array of style properties passed to the ",(0,r.yg)("a",{parentName:"p",href:"/docs/next/css-animations/animation-name"},(0,r.yg)("inlineCode",{parentName:"a"},"animationName")),"."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"// highlight-next-line\nanimationDirection: ['alternate', 'normal', 'reverse'];\nanimationName: [bounceIn, move, slide];\n")),(0,r.yg)("p",null,"In the following example, ",(0,r.yg)("inlineCode",{parentName:"p"},"bounceIn")," keyframe would alternate between running forwards and backwards, ",(0,r.yg)("inlineCode",{parentName:"p"},"move")," would run forwards, and ",(0,r.yg)("inlineCode",{parentName:"p"},"slide")," would run in reverse."),(0,r.yg)("h2",{id:"example"},"Example"),(0,r.yg)(O,{src:h,component:f,mdxType:"InteractiveExample"}),(0,r.yg)("h2",{id:"platform-compatibility"},"Platform compatibility"),(0,r.yg)(N,{android:!0,ios:!0,web:!0,mdxType:"PlatformCompatibility"}))}k.isMDXComponent=!0}}]);