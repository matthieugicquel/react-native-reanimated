"use strict";(self.webpackChunkdocs_reanimated=self.webpackChunkdocs_reanimated||[]).push([[5446],{70493:(e,n,t)=>{t.d(n,{A:()=>m});var a=t(96540),i=t(9176),o=t(70690),r=t(62257),s=t(72188),l=t(52747);function m(){const[e,n]=(0,a.useState)(!0),t=new l.Keyframe({0:{opacity:0,transform:[{translateY:50},{rotate:"820deg"},{skewX:"0deg"},{scale:0}]},50:{opacity:.5,transform:[{translateY:25},{rotate:"-180deg"},{skewX:"30deg"},{scale:.5}],easing:l.Easing.out(l.Easing.quad)},100:{opacity:1,transform:[{translateY:0},{rotate:"0deg"},{skewX:"0deg"},{scale:1}]}}).duration(1e3),s=new l.Keyframe({0:{opacity:1,transform:[{translateY:0},{rotateZ:"0deg"}]},10:{opacity:1,transform:[{translateY:25},{rotateZ:"0deg"}],easing:l.Easing.exp},50:{opacity:.5,transform:[{translateY:-100},{rotateZ:"60deg"}]},100:{opacity:0,transform:[{translateY:-300},{rotateZ:"120deg"}]}}).duration(1e3);return a.createElement(i.A,{style:d.container},e&&a.createElement(l.default.View,{entering:t,exiting:s,style:d.box},a.createElement(o.A,{onPress:()=>n(!e),style:d.button})),a.createElement(r.A,{title:"Animate box",onPress:()=>n(!e)}))}const d=s.A.create({container:{height:250,flex:1,justifyContent:"flex-end",alignItems:"center"},button:{height:"100%",width:"100%"},box:{width:100,height:100,backgroundColor:"#b58df1",borderRadius:24,justifyContent:"center",alignItems:"center",marginBottom:48}})},23249:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>m,toc:()=>y});var a=t(58168),i=(t(96540),t(15680)),o=t(70493),r=t(29070);const s={sidebar_position:2},l="Keyframe animations",m={unversionedId:"layout-animations/keyframe-animations",id:"layout-animations/keyframe-animations",title:"Keyframe animations",description:"Keyframes are animation definition schemas that let you create complex animations. They allow you more flexibility than standard Entering and Exiting presets.",source:"@site/docs/layout-animations/keyframe-animations.mdx",sourceDirName:"layout-animations",slug:"/layout-animations/keyframe-animations",permalink:"/react-native-reanimated/docs/next/layout-animations/keyframe-animations",draft:!1,editUrl:"https://github.com/software-mansion/react-native-reanimated/edit/main/packages/docs-reanimated/docs/layout-animations/keyframe-animations.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Entering/Exiting animations",permalink:"/react-native-reanimated/docs/next/layout-animations/entering-exiting-animations"},next:{title:"Layout transitions",permalink:"/react-native-reanimated/docs/next/layout-animations/layout-transitions"}},d={},y=[{value:"Reference",id:"reference",level:2},{value:"Arguments",id:"arguments",level:3},{value:"<code>definitions</code>",id:"definitions",level:4},{value:"Modifiers",id:"modifiers",level:2},{value:"Remarks",id:"remarks",level:2},{value:"Example",id:"example",level:2},{value:"Platform compatibility",id:"platform-compatibility",level:2}],c=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.yg)("div",n)},g=c("InteractiveExample"),u=c("PlatformCompatibility"),p={toc:y},f="wrapper";function h(e){let{components:n,...t}=e;return(0,i.yg)(f,(0,a.A)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"keyframe-animations"},"Keyframe animations"),(0,i.yg)("p",null,"Keyframes are animation definition schemas that let you create complex animations. They allow you more flexibility than standard Entering and Exiting presets."),(0,i.yg)("h2",{id:"reference"},"Reference"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-javascript"},"import { Keyframe } from 'react-native-reanimated';\n\nconst keyframe = new Keyframe({\n  0: {\n    transform: [{ rotate: '0deg' }],\n  },\n  45: {\n    transform: [{ rotate: '100deg' }],\n    easing: Easing.exp,\n  },\n  100: {\n    transform: [{ rotate: '45deg' }],\n  },\n});\n\nfunction App() {\n  return <Animated.View entering={keyframe} />;\n}\n")),(0,i.yg)("details",null,(0,i.yg)("summary",null,"Type definitions"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"type FirstFrame =\n  | {\n      0: KeyframeProps & { easing?: never };\n      from?: never;\n    }\n  | {\n      0?: never;\n      from: KeyframeProps & { easing?: never };\n    };\n\ntype LastFrame =\n  | { 100?: KeyframeProps; to?: never }\n  | { 100?: never; to: KeyframeProps };\n\nexport type ValidKeyframeProps = FirstFrame &\n  LastFrame &\n  Record<number, KeyframeProps>;\n\nclass Keyframe {\n  constructor(definitions: ValidKeyframeProps;\n  duration(durationMs: number): Keyframe;\n  delay(delayMs: number): Keyframe;\n  reduceMotion(reduceMotionV: ReduceMotion): Keyframe;\n  withCallback(callback: (finished: boolean) => void): Keyframe;\n}\n"))),(0,i.yg)("h3",{id:"arguments"},"Arguments"),(0,i.yg)("h4",{id:"definitions"},(0,i.yg)("inlineCode",{parentName:"h4"},"definitions")),(0,i.yg)("p",null,"An object, that contains definitions of your animation.\nThe object keys should be within range ",(0,i.yg)("inlineCode",{parentName:"p"},"0-100")," and correspond to animation progress.\nThe object values should consist of style props and optionally of an ",(0,i.yg)("a",{parentName:"p",href:"/docs/animations/withTiming/#easing"},"easing function"),". If easing property is not provided, it defaults to ",(0,i.yg)("inlineCode",{parentName:"p"},"Easing.linear"),"."),(0,i.yg)("p",null,"The keys take the following values:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"0")," or ",(0,i.yg)("inlineCode",{parentName:"li"},"from"),": Initial state of the object."),(0,i.yg)("li",{parentName:"ul"},"Middle points (e.g., ",(0,i.yg)("inlineCode",{parentName:"li"},"45"),"): Intermediate states of the object."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"100")," or ",(0,i.yg)("inlineCode",{parentName:"li"},"to"),": Final state of the object.")),(0,i.yg)("p",null,"The key ",(0,i.yg)("inlineCode",{parentName:"p"},"0")," (or ",(0,i.yg)("inlineCode",{parentName:"p"},"from"),") should be assigned the style that you want for your object at the beginning of the animation. The key ",(0,i.yg)("inlineCode",{parentName:"p"},"100")," (or ",(0,i.yg)("inlineCode",{parentName:"p"},"to"),") should be assigned the style that you want for your object at the end of the animation."),(0,i.yg)("h2",{id:"modifiers"},"Modifiers"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-javascript"},"keyframe\n  .duration(1000)\n  .delay(500)\n  .reduceMotion(ReduceMotion.Never)\n  .withCallback((finished) => {\n    console.log(`finished without interruptions: ${finished}`);\n  });\n")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},".duration(durationMs: number)")," is the length of the animation (in milliseconds). Defaults to ",(0,i.yg)("inlineCode",{parentName:"li"},"500"),"."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},".delay(durationMs: number)")," is the delay before the animation starts (in milliseconds). Defaults to ",(0,i.yg)("inlineCode",{parentName:"li"},"0"),"."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},".reduceMotion(reduceMotion: ReduceMotion)")," determines how the animation responds to the device's reduced motion accessibility setting."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},".withCallback(callback: (finished: boolean) => void)")," is the callback that will fire after the animation ends. Sets ",(0,i.yg)("inlineCode",{parentName:"li"},"finished")," to ",(0,i.yg)("inlineCode",{parentName:"li"},"true")," when animation ends without interruptions, and ",(0,i.yg)("inlineCode",{parentName:"li"},"false")," otherwise.")),(0,i.yg)("h2",{id:"remarks"},"Remarks"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Providing keyframe ",(0,i.yg)("inlineCode",{parentName:"li"},"0")," or ",(0,i.yg)("inlineCode",{parentName:"li"},"from")," is required as it contains the initial state of the object you want to animate."),(0,i.yg)("li",{parentName:"ul"},"Ensure you provide the initial value for all style properties you want to animate in other keyframes."),(0,i.yg)("li",{parentName:"ul"},"If you want to add easing to an animation between two keyframes you have to pass it to the second one. As a result you should never provide any easing to keyframe ",(0,i.yg)("inlineCode",{parentName:"li"},"0"),"."),(0,i.yg)("li",{parentName:"ul"},"Do not provide both ",(0,i.yg)("inlineCode",{parentName:"li"},"0")," and ",(0,i.yg)("inlineCode",{parentName:"li"},"from"),", or ",(0,i.yg)("inlineCode",{parentName:"li"},"100")," and ",(0,i.yg)("inlineCode",{parentName:"li"},"to")," keyframes, as it will result in a parsing conflict."),(0,i.yg)("li",{parentName:"ul"},"If you want to animate transform style, make sure that all properties in the transformation array are in the same order in all keyframes.")),(0,i.yg)("h2",{id:"example"},"Example"),(0,i.yg)(g,{src:r.A,component:o.A,mdxType:"InteractiveExample"}),(0,i.yg)("h2",{id:"platform-compatibility"},"Platform compatibility"),(0,i.yg)(u,{android:!0,ios:!0,web:!0,mdxType:"PlatformCompatibility"}))}h.isMDXComponent=!0},29070:(e,n,t)=>{t.d(n,{A:()=>a});const a="import React, { useState } from 'react';\nimport { View, Button, StyleSheet, Pressable } from 'react-native';\nimport Animated, { Keyframe, Easing } from 'react-native-reanimated';\n\nexport default function KeyframeExample() {\n  const [visible, setVisible] = useState(true);\n\n  const enteringAnimation = new Keyframe({\n    0: {\n      opacity: 0,\n      transform: [\n        { translateY: 50 },\n        { rotate: '820deg' },\n        { skewX: '0deg' },\n        { scale: 0 },\n      ],\n    },\n    50: {\n      opacity: 0.5,\n      transform: [\n        { translateY: 25 },\n        { rotate: '-180deg' },\n        { skewX: '30deg' },\n        { scale: 0.5 },\n      ],\n      easing: Easing.out(Easing.quad),\n    },\n    100: {\n      opacity: 1,\n      transform: [\n        { translateY: 0 },\n        { rotate: '0deg' },\n        { skewX: '0deg' },\n        { scale: 1 },\n      ],\n    },\n  }).duration(1000);\n\n  const exitingAnimation = new Keyframe({\n    0: {\n      opacity: 1,\n      transform: [{ translateY: 0 }, { rotateZ: '0deg' }],\n    },\n    10: {\n      opacity: 1,\n      transform: [{ translateY: 25 }, { rotateZ: '0deg' }],\n      easing: Easing.exp,\n    },\n    50: {\n      opacity: 0.5,\n      transform: [{ translateY: -100 }, { rotateZ: '60deg' }],\n    },\n    100: {\n      opacity: 0,\n      transform: [{ translateY: -300 }, { rotateZ: '120deg' }],\n    },\n  }).duration(1000);\n\n  return (\n    <View style={styles.container}>\n      {visible && (\n        <Animated.View\n          entering={enteringAnimation}\n          exiting={exitingAnimation}\n          style={styles.box}>\n          <Pressable\n            onPress={() => setVisible(!visible)}\n            style={styles.button}\n          />\n        </Animated.View>\n      )}\n      <Button title=\"Animate box\" onPress={() => setVisible(!visible)} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 250,\n    flex: 1,\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n  button: {\n    height: '100%',\n    width: '100%',\n  },\n  box: {\n    width: 100,\n    height: 100,\n    backgroundColor: '#b58df1',\n    borderRadius: 24,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 48,\n  },\n});\n"},62257:(e,n,t)=>{t.d(n,{A:()=>m});var a=t(96540),i=t(72188),o=t(46413),r=t(78506),s=a.forwardRef(((e,n)=>{var t=e.accessibilityLabel,i=e.color,s=e.disabled,m=e.onPress,d=e.testID,y=e.title;return a.createElement(o.A,{accessibilityLabel:t,accessibilityRole:"button",disabled:s,focusable:!s,onPress:m,ref:n,style:[l.button,i&&{backgroundColor:i},s&&l.buttonDisabled],testID:d},a.createElement(r.A,{style:[l.text,s&&l.textDisabled]},y))}));s.displayName="Button";var l=i.A.create({button:{backgroundColor:"#2196F3",borderRadius:2},text:{color:"#fff",fontWeight:"500",padding:8,textAlign:"center",textTransform:"uppercase"},buttonDisabled:{backgroundColor:"#dfdfdf"},textDisabled:{color:"#a1a1a1"}});const m=s}}]);