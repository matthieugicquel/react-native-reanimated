"use strict";(self.webpackChunkdocs_reanimated=self.webpackChunkdocs_reanimated||[]).push([[190],{15680:(n,e,t)=>{t.d(e,{xA:()=>p,yg:()=>g});var i=t(96540);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function r(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,i)}return t}function o(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?r(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function l(n,e){if(null==n)return{};var t,i,a=function(n,e){if(null==n)return{};var t,i,a={},r=Object.keys(n);for(i=0;i<r.length;i++)t=r[i],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(i=0;i<r.length;i++)t=r[i],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var m=i.createContext({}),s=function(n){var e=i.useContext(m),t=e;return n&&(t="function"==typeof n?n(e):o(o({},e),n)),t},p=function(n){var e=s(n.components);return i.createElement(m.Provider,{value:e},n.children)},u="mdxType",c={inlineCode:"code",wrapper:function(n){var e=n.children;return i.createElement(i.Fragment,{},e)}},d=i.forwardRef((function(n,e){var t=n.components,a=n.mdxType,r=n.originalType,m=n.parentName,p=l(n,["components","mdxType","originalType","parentName"]),u=s(t),d=a,g=u["".concat(m,".").concat(d)]||u[d]||c[d]||r;return t?i.createElement(g,o(o({ref:e},p),{},{components:t})):i.createElement(g,o({ref:e},p))}));function g(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var r=t.length,o=new Array(r);o[0]=d;var l={};for(var m in e)hasOwnProperty.call(e,m)&&(l[m]=e[m]);l.originalType=n,l[u]="string"==typeof n?n:a,o[1]=l;for(var s=2;s<r;s++)o[s]=t[s];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}d.displayName="MDXCreateElement"},47100:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>f,contentTitle:()=>g,default:()=>w,frontMatter:()=>d,metadata:()=>y,toc:()=>h});var i=t(58168),a=t(96540),r=t(15680),o=t(9176),l=t(72188),m=t(52773);const s={"0%":{transform:[{translateX:-80},{translateY:-80}],animationTimingFunction:(0,m.cubicBezier)(.25,.1,.26,1.53)},"25%":{transform:[{translateX:80},{translateY:-80}],animationTimingFunction:"linear"},"50%":{transform:[{translateX:80},{translateY:80}],animationTimingFunction:"easeInOut"},"75%":{transform:[{translateX:-80},{translateY:80}],animationTimingFunction:(0,m.steps)(4,"end")},"100%":{transform:[{translateX:-80},{translateY:-80}]}};function p(){return a.createElement(o.A,{style:u.container},a.createElement(m.default.View,{style:[u.box,{animationName:s,animationDuration:"4s",animationIterationCount:"infinite"}]}))}const u=l.A.create({container:{flex:1,alignItems:"center",justifyContent:"center",height:"100%"},box:{height:80,width:80,backgroundColor:"#b58df1",marginVertical:64}}),c="import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport Animated, {\n  CSSAnimationKeyframes,\n  cubicBezier,\n  steps,\n} from 'react-native-reanimated';\n\nconst square: CSSAnimationKeyframes = {\n  '0%': {\n    transform: [{ translateX: -80 }, { translateY: -80 }],\n    animationTimingFunction: cubicBezier(0.25, 0.1, 0.26, 1.53),\n  },\n  '25%': {\n    transform: [{ translateX: 80 }, { translateY: -80 }],\n    animationTimingFunction: 'linear',\n  },\n  '50%': {\n    transform: [{ translateX: 80 }, { translateY: 80 }],\n    animationTimingFunction: 'easeInOut',\n  },\n  '75%': {\n    transform: [{ translateX: -80 }, { translateY: 80 }],\n    animationTimingFunction: steps(4, 'end'),\n  },\n  '100%': {\n    transform: [{ translateX: -80 }, { translateY: -80 }],\n  },\n};\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Animated.View\n        style={[\n          styles.box,\n          {\n            animationName: square,\n            animationDuration: '4s',\n            animationIterationCount: 'infinite',\n          },\n        ]}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n  },\n  box: {\n    height: 80,\n    width: 80,\n    backgroundColor: '#b58df1',\n    marginVertical: 64,\n  },\n});\n",d={sidebar_position:4},g="animationTimingFunction",y={unversionedId:"css-animations/animation-timing-function",id:"css-animations/animation-timing-function",title:"animationTimingFunction",description:"animationTimingFunction lets you adjust how intermediate values are calculated during the transition. It can be specified for the entire animation or for each keyframe separately. Defaults to ease.",source:"@site/docs/css-animations/animation-timing-function.mdx",sourceDirName:"css-animations",slug:"/css-animations/animation-timing-function",permalink:"/react-native-reanimated/docs/next/css-animations/animation-timing-function",draft:!1,editUrl:"https://github.com/software-mansion/react-native-reanimated/edit/main/packages/docs-reanimated/docs/css-animations/animation-timing-function.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"animationDelay",permalink:"/react-native-reanimated/docs/next/css-animations/animation-delay"},next:{title:"animationDirection",permalink:"/react-native-reanimated/docs/next/css-animations/animation-direction"}},f={},h=[{value:"Reference",id:"reference",level:2},{value:"Values",id:"values",level:3},{value:"<code>&lt;predefined timing function&gt;</code>",id:"predefined-timing-function",level:4},{value:"<code>&lt;parametrized timing function&gt;</code>",id:"parametrized-timing-function",level:4},{value:"<code>&lt;timing function[]&gt;</code>",id:"timing-function",level:4},{value:"Remarks",id:"remarks",level:2},{value:"Platform compatibility",id:"platform-compatibility",level:2}],N=n=>function(e){return console.warn("Component "+n+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.yg)("div",e)},b=N("InteractiveExample"),v=N("Indent"),C=N("PlatformCompatibility"),T={toc:h},x="wrapper";function w(n){let{components:e,...t}=n;return(0,r.yg)(x,(0,i.A)({},T,t,{components:e,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"animationtimingfunction"},"animationTimingFunction"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"animationTimingFunction")," lets you adjust how intermediate values are calculated during the transition. It can be specified for the entire animation or for each keyframe separately. Defaults to ",(0,r.yg)("inlineCode",{parentName:"p"},"ease"),"."),(0,r.yg)(b,{src:c,component:p,mdxType:"InteractiveExample"}),(0,r.yg)("h2",{id:"reference"},"Reference"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"function App() {\n  return (\n    <Animated.View\n      style={{\n        animationName: {\n          to: {\n            transform: [{ translateY: 200 }],\n          },\n        },\n        animationDuration: '3s',\n        // highlight-next-line\n        animationTimingFunction: 'easeOut',\n      }}\n    />\n  );\n}\n")),(0,r.yg)("details",null,(0,r.yg)("summary",null,"Type definitions"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"type NormalizedCubicBezierEasing = {\n  name: string;\n  x1: number;\n  y1: number;\n  x2: number;\n  y2: number;\n};\ntype NormalizedLinearEasing = {\n  name: string;\n  points: Point[];\n};\ntype NormalizedStepsEasing = {\n  name: string;\n  points: Point[];\n};\n\ntype ControlPoint = number | [number, ...Percentage[]];\n\ntype StepsModifier =\n  | 'jumpStart'\n  | 'start'\n  | 'jumpEnd'\n  | 'end'\n  | 'jumpNone'\n  | 'jumpBoth';\n\ntype NormalizedCSSTimingFunction =\n  | PredefinedTimingFunction\n  | NormalizedCubicBezierEasing\n  | NormalizedLinearEasing\n  | NormalizedStepsEasing;\n\ntype PredefinedTimingFunction =\n  | 'linear'\n  | 'ease'\n  | 'easeIn'\n  | 'easeOut'\n  | 'easeInOut'\n  | 'stepStart'\n  | 'stepEnd';\n\ninterface ParametrizedTimingFunction {\n  toString(): string;\n  normalize(): NormalizedCSSTimingFunction;\n}\n\ntype CSSTimingFunction = PredefinedTimingFunction | ParametrizedTimingFunction;\ntype CSSAnimationTimingFunction = CSSTimingFunction | CSSTimingFunction[];\n"))),(0,r.yg)("h3",{id:"values"},"Values"),(0,r.yg)("p",null,"Easings control the pacing of animations and transitions."),(0,r.yg)("h4",{id:"predefined-timing-function"},(0,r.yg)("inlineCode",{parentName:"h4"},"<predefined timing function>")),(0,r.yg)("p",null,"A string representing a predefined timing function. Available functions:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"linear")," - a constant speed from start to finish,"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"ease")," - starts slow, speeds up, then slows down,"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"easeIn")," - starts slow and accelerates,"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"easeOut")," - starts quickly and decelerates,"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"easeInOut")," - starts slowly, speeds up, and then slows down again."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"stepStart")," - jumps instantly at the start,"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"stepEnd")," - jumps instantly at the end.")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"animationTimingFunction: 'linear',\n")),(0,r.yg)("h4",{id:"parametrized-timing-function"},(0,r.yg)("inlineCode",{parentName:"h4"},"<parametrized timing function>")),(0,r.yg)("p",null,"A returned object from parametrized timing functions. Available functions:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"cubicBezier(x1: number, y1: number, x2: number, y2: number)")," - a B\xe9zier curve to shape the progress of an animation. It is defined by two control points (x1, y1, x2, y2) that mathematically describe the curve.")),(0,r.yg)(v,{mdxType:"Indent"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"import { cubicBezier } from 'react-native-reanimated';\n\nanimationTimingFunction: cubicBezier(0.25, 0.1, 0.5, 2),\n"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"linear(...points: ControlPoint[])")," - a simple polygonal chain that always starts at an x-value of 0 and ends at an x-value of 1. You can either specify the points' y and x coordinates or leave the x coordinates to be inferred.")),(0,r.yg)(v,{mdxType:"Indent"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"import { linear } from 'react-native-reanimated';\n\nanimationTimingFunction: linear(0, [0.25, '75%'], 1),\n"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"steps(stepsNumber: number, modifier?: StepsModifier)")," - creates an easing function that makes given number of even steps over increasing y-values. The second argument is a modifier that adds jumps before or after the steps. Modifier defaults to ",(0,r.yg)("inlineCode",{parentName:"li"},"jumpEnd"),".",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"jumpStart")," - a left-continuous function, where the first jump occurs at the start of the transition,"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"jumpEnd")," - a right-continuous function, where the final jump occurs at the end of the transition,"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"jumpNone")," - no jump on either end. Maintaining a hold at both the 0% and 100% points, each for 1/n of the total duration,"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"jumpBoth")," - adds pauses at both the 0% and 100% points, introducing an additional step during the transition,"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"start")," - an alias for ",(0,r.yg)("inlineCode",{parentName:"li"},"jumpStart"),","),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"end")," - an alias for ",(0,r.yg)("inlineCode",{parentName:"li"},"jumpEnd"),",")))),(0,r.yg)(v,{mdxType:"Indent"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"import { steps } from 'react-native-reanimated';\n\nanimationTimingFunction: steps(4, 'jumpEnd'),\n"))),(0,r.yg)("h4",{id:"timing-function"},(0,r.yg)("inlineCode",{parentName:"h4"},"<timing function[]>")),(0,r.yg)("p",null,"An array of timing functions. The order in this array corresponds to the array of style properties passed to the ",(0,r.yg)("a",{parentName:"p",href:"/docs/next/css-animations/animation-name"},(0,r.yg)("inlineCode",{parentName:"a"},"animationName")),"."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"// highlight-next-line\nanimationTimingFunction: ['linear', steps(60, 'jumpNone'), 'easeInOut'];\ntransitionProperty: [bounceIn, move, slide];\n")),(0,r.yg)("p",null,"In the following example, the ",(0,r.yg)("inlineCode",{parentName:"p"},"bounceIn")," keyframe will be animated using ",(0,r.yg)("inlineCode",{parentName:"p"},"linear")," easing, ",(0,r.yg)("inlineCode",{parentName:"p"},"move")," will use the ",(0,r.yg)("inlineCode",{parentName:"p"},"steps")," timing function, and ",(0,r.yg)("inlineCode",{parentName:"p"},"slide")," will be animated using ",(0,r.yg)("inlineCode",{parentName:"p"},"easeInOut")," easing."),(0,r.yg)("h2",{id:"remarks"},"Remarks"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"If no subsequent keyframe specifies that property, the timing function applies until the end of the animation.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"A timing function specified in the last keyframe (",(0,r.yg)("inlineCode",{parentName:"p"},"100%"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"to"),", or ",(0,r.yg)("inlineCode",{parentName:"p"},"1"),") is ignored since there is no subsequent keyframe."))),(0,r.yg)(v,{mdxType:"Indent"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"const square: CSSAnimationKeyframes = {\n  '0%': {\n    transform: [{ translateX: 0 }],\n    animationTimingFunction: cubicBezier(0.25, 0.1, 0.26, 1.53),\n  },\n  '100%': {\n    transform: [{ translateX: -80 }],\n    // highlight-next-line\n    animationTimingFunction: 'linear', // \ud83d\udea8 this will be ignored\n  },\n};\n"))),(0,r.yg)("h2",{id:"platform-compatibility"},"Platform compatibility"),(0,r.yg)(C,{android:!0,ios:!0,web:!0,mdxType:"PlatformCompatibility"}))}w.isMDXComponent=!0}}]);