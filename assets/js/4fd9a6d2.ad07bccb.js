"use strict";(self.webpackChunkdocs_reanimated=self.webpackChunkdocs_reanimated||[]).push([[8851],{15680:(e,n,t)=>{t.d(n,{xA:()=>d,yg:()=>p});var o=t(96540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=o.createContext({}),c=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=c(e.components);return o.createElement(l.Provider,{value:n},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},y=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=c(t),y=r,p=m["".concat(l,".").concat(y)]||m[y]||u[y]||a;return t?o.createElement(p,i(i({ref:n},d),{},{components:t})):o.createElement(p,i({ref:n},d))}));function p(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=y;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[m]="string"==typeof e?e:r,i[1]=s;for(var c=2;c<a;c++)i[c]=t[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}y.displayName="MDXCreateElement"},65081:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>v,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var o=t(58168),r=(t(96540),t(15680)),a=t(71933);const i={sidebar_position:7},s="dispatchCommand",l={unversionedId:"advanced/dispatchCommand",id:"version-3.x/advanced/dispatchCommand",title:"dispatchCommand",description:"dispatchCommand allows you to run commands on a native component from the UI thread directly.",source:"@site/versioned_docs/version-3.x/advanced/dispatchCommand.mdx",sourceDirName:"advanced",slug:"/advanced/dispatchCommand",permalink:"/react-native-reanimated/docs/advanced/dispatchCommand",draft:!1,editUrl:"https://github.com/software-mansion/react-native-reanimated/edit/main/packages/docs-reanimated/versioned_docs/version-3.x/advanced/dispatchCommand.mdx",tags:[],version:"3.x",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"useComposedEventHandler",permalink:"/react-native-reanimated/docs/advanced/useComposedEventHandler"},next:{title:"setNativeProps",permalink:"/react-native-reanimated/docs/advanced/setNativeProps"}},c={},d=[{value:"Reference",id:"reference",level:2},{value:"Arguments",id:"arguments",level:3},{value:"<code>animatedRef</code>",id:"animatedref",level:4},{value:"<code>commandName</code>",id:"commandname",level:4},{value:"<code>args</code> <Optional />",id:"args-",level:4},{value:"Example",id:"example",level:2},{value:"Remarks",id:"remarks",level:2},{value:"Platform compatibility",id:"platform-compatibility",level:2}],m=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.yg)("div",n)},u=m("Optional"),y=m("ExampleVideo"),p=m("CollapsibleCode"),f=m("PlatformCompatibility"),g={toc:d},h="wrapper";function v(e){let{components:n,...t}=e;return(0,r.yg)(h,(0,o.A)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"dispatchcommand"},"dispatchCommand"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"dispatchCommand")," allows you to run commands on a native component from the UI thread directly."),(0,r.yg)("h2",{id:"reference"},"Reference"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"import { dispatchCommand } from 'react-native-reanimated';\n\nfunction App() {\n  const animatedRef = useAnimatedRef();\n\n  const gesture = Gesture.Tap().onStart(() => {\n    // highlight-next-line\n    dispatchCommand(animatedRef, 'focus');\n  });\n\n  return (\n    <>\n      <AnimatedTextInput ref={animatedRef} style={styles.input} />\n      <GestureDetector gesture={gesture}>\n        <Button title=\"Focus\" />\n      </GestureDetector>\n    </>\n  );\n}\n")),(0,r.yg)("details",null,(0,r.yg)("summary",null,"Type definitions"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"function dispatchCommand<T extends Component>(\n  animatedRef: AnimatedRef<T>,\n  commandName: string,\n  args?: unknown[]\n) => void;\n"))),(0,r.yg)("h3",{id:"arguments"},"Arguments"),(0,r.yg)("h4",{id:"animatedref"},(0,r.yg)("inlineCode",{parentName:"h4"},"animatedRef")),(0,r.yg)("p",null,"An ",(0,r.yg)("a",{parentName:"p",href:"/docs/core/useAnimatedRef#returns"},"animated ref")," connected to the component you'd want to update. The animated ref has to be passed either to an ",(0,r.yg)("a",{parentName:"p",href:"/docs/fundamentals/glossary#animated-component"},"Animated component")," or a React Native built-in component."),(0,r.yg)("h4",{id:"commandname"},(0,r.yg)("inlineCode",{parentName:"h4"},"commandName")),(0,r.yg)("p",null,"The name of the command to execute, e.g. ",(0,r.yg)("inlineCode",{parentName:"p"},"'focus'")," or ",(0,r.yg)("inlineCode",{parentName:"p"},"'scrollToEnd'"),"."),(0,r.yg)("h4",{id:"args-"},(0,r.yg)("inlineCode",{parentName:"h4"},"args")," ",(0,r.yg)(u,{mdxType:"Optional"})),(0,r.yg)("p",null,"The array of command arguments. Defaults to an empty array."),(0,r.yg)("h2",{id:"example"},"Example"),(0,r.yg)(y,{sources:{android:"/react-native-reanimated/recordings/dispatchCommand_android.mov",ios:"/react-native-reanimated/recordings/dispatchCommand_ios.mov"},mdxType:"ExampleVideo"}),(0,r.yg)(p,{src:a.A,showLines:[29,32],mdxType:"CollapsibleCode"}),(0,r.yg)("h2",{id:"remarks"},"Remarks"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Commands differ from component to component. Check relevant sources i.e. React Native documentation on ",(0,r.yg)("a",{parentName:"li",href:"https://reactnative.dev/docs/components-and-apis"},"components")," to see which commands are available.")),(0,r.yg)("h2",{id:"platform-compatibility"},"Platform compatibility"),(0,r.yg)(f,{android:!0,ios:!0,mdxType:"PlatformCompatibility"}))}v.isMDXComponent=!0},71933:(e,n,t)=>{t.d(n,{A:()=>o});const o="import Animated, {\n  dispatchCommand,\n  useAnimatedRef,\n} from 'react-native-reanimated';\nimport {\n  SafeAreaView,\n  StyleSheet,\n  TextInput,\n  View,\n  Text,\n  Alert,\n  Pressable,\n} from 'react-native';\nimport {\n  Gesture,\n  GestureDetector,\n  GestureHandlerRootView,\n} from 'react-native-gesture-handler';\nimport React, { useState } from 'react';\n\nconst AnimatedTextInput = Animated.createAnimatedComponent(TextInput);\n\nexport default function LoginFormExample() {\n  const tosRef = useAnimatedRef();\n  const loginRef = useAnimatedRef();\n\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n\n  const goDown = Gesture.Tap().onStart(() => {\n    dispatchCommand(tosRef, 'scrollToEnd', [true]);\n    dispatchCommand(loginRef, 'focus');\n  });\n\n  const handleLogin = () => {\n    Alert.alert(`Welcome ${login}`, 'Successfully logged in!');\n  };\n\n  return (\n    <SafeAreaView style={styles.safeArea}>\n      <GestureHandlerRootView style={styles.container}>\n        <Animated.ScrollView\n          stickyHeaderIndices={[1]}\n          ref={tosRef}\n          contentContainerStyle={styles.tosContainer}>\n          <View style={styles.background} />\n          <View style={styles.stickyButtonContainer}>\n            <GestureDetector gesture={goDown}>\n              <Pressable style={styles.button}>\n                <Text style={styles.buttonText}>I'm tired of reading.</Text>\n              </Pressable>\n            </GestureDetector>\n          </View>\n          <Text style={styles.tosTitle}>Terms of Service</Text>\n          <Text style={styles.tosContent}>\n            Welcome to Services! These Terms of Service (\"Terms\") govern your\n            use of our website, products, and services (\"Services\"). By\n            accessing or using our Services, you agree to be bound by these\n            Terms. If you do not agree to these Terms, do not use our Services.\n          </Text>\n          <Text style={styles.tosSubtitle}>1. Acceptance of Terms</Text>\n          <Text style={styles.tosContent}>\n            By using our Services, you affirm that you are at least 18 years\n            old, or if you are under 18 years old, that you have the consent of\n            your parent or legal guardian.\n          </Text>\n          <Text style={styles.tosSubtitle}>2. Changes to Terms</Text>\n          <Text style={styles.tosContent}>\n            We reserve the right to modify these Terms at any time. We will\n            notify you of any changes by posting the new Terms on our website.\n            You are advised to review these Terms periodically for any changes.\n            Your continued use of the Services after the changes are posted\n            constitutes your acceptance of the new Terms.\n          </Text>\n          <Text style={styles.tosSubtitle}>3. Use of Services</Text>\n          <Text style={styles.tosContent}>\n            You agree to use the Services only for lawful purposes and in\n            accordance with these Terms. You agree not to use the Services:\n            {'\\n'}\u2022 In any way that violates any applicable federal, state,\n            local, or international law or regulation.\n            {'\\n'}\u2022 For the purpose of exploiting, harming, or attempting to\n            exploit or harm minors in any way.\n            {'\\n'}\u2022 To transmit, or procure the sending of, any advertising or\n            promotional material, including any \"junk mail,\" \"chain letters,\"\n            \"spam,\" or any other similar solicitation.\n            {'\\n'}\u2022 To impersonate or attempt to impersonate Services, a\n            Services employee, another user, or any other person or entity.\n            {'\\n'}\u2022 In any way that infringes upon the rights of others, or in\n            any way is illegal, threatening, fraudulent, or harmful, or in\n            connection with any unlawful, illegal, fraudulent, or harmful\n            purpose or activity.\n            {'\\n'}\u2022 To engage in any other conduct that restricts or inhibits\n            anyone's use or enjoyment of the Services, or which, as determined\n            by us, may harm Services or users of the Services, or expose them to\n            liability.\n          </Text>\n          <Text style={styles.tosSubtitle}>4. User Accounts</Text>\n          <Text style={styles.tosContent}>\n            To access some of the Services, you may be required to create an\n            account. You agree to provide accurate, current, and complete\n            information during the registration process and to update such\n            information to keep it accurate, current, and complete. You are\n            responsible for safeguarding your password and agree not to disclose\n            your password to any third party. You agree that you are solely\n            responsible for any activities or actions under your account,\n            whether you have authorized such activities or actions. You will\n            immediately notify us of any unauthorized use of your account.\n          </Text>\n          <Text style={styles.tosSubtitle}>5. Termination</Text>\n          <Text style={styles.tosContent}>\n            We may terminate or suspend your access to the Services immediately,\n            without prior notice or liability, for any reason whatsoever,\n            including without limitation if you breach the Terms. Upon\n            termination, your right to use the Services will immediately cease.\n            If you wish to terminate your account, you may simply discontinue\n            using the Services.\n          </Text>\n          <Text style={styles.tosSubtitle}>6. Limitation of Liability</Text>\n          <Text style={styles.tosContent}>\n            In no event shall Services, nor its directors, employees, partners,\n            agents, suppliers, or affiliates, be liable for any indirect,\n            incidental, special, consequential, or punitive damages, including\n            without limitation, loss of profits, data, use, goodwill, or other\n            intangible losses, resulting from (i) your use or inability to use\n            the Service; (ii) any unauthorized access to or use of our servers\n            and/or any personal information stored therein; (iii) any\n            interruption or cessation of transmission to or from the Service;\n            (iv) any bugs, viruses, trojan horses, or the like that may be\n            transmitted to or through our Service by any third party; (v) any\n            errors or omissions in any content or for any loss or damage\n            incurred as a result of your use of any content posted, emailed,\n            transmitted, or otherwise made available through the Service; and/or\n            (vi) the defamatory, offensive, or illegal conduct of any third\n            party. In no event shall Services be liable for any claims,\n            proceedings, liabilities, obligations, damages, losses, or costs in\n            an amount exceeding the amount you paid to Services hereunder or\n            $100.00, whichever is greater.\n          </Text>\n          <Text style={styles.tosSubtitle}>7. Governing Law</Text>\n          <Text style={styles.tosContent}>\n            These Terms shall be governed and construed in accordance with the\n            laws of Poland, without regard to its conflict of law provisions.\n            Our failure to enforce any right or provision of these Terms will\n            not be considered a waiver of those rights. If any provision of\n            these Terms is held to be invalid or unenforceable by a court, the\n            remaining provisions of these Terms will remain in effect. These\n            Terms constitute the entire agreement between us regarding our\n            Service, and supersede and replace any prior agreements we might\n            have had between us regarding the Service.\n          </Text>\n          <View style={styles.loginForm}>\n            <Text style={styles.loginFormTitle}>Welcome!</Text>\n            <Text style={styles.loginFormSubtitle}>\n              By logging in you accept our Terms of Service.\n            </Text>\n            <AnimatedTextInput\n              ref={loginRef}\n              style={styles.input}\n              placeholder=\"Login\"\n              value={login}\n              onChangeText={setLogin}\n            />\n            <AnimatedTextInput\n              style={styles.input}\n              placeholder=\"Password\"\n              value={password}\n              onChangeText={setPassword}\n              secureTextEntry\n            />\n            <Pressable style={styles.button} onPress={handleLogin}>\n              <Text style={styles.buttonText}>Login</Text>\n            </Pressable>\n          </View>\n        </Animated.ScrollView>\n      </GestureHandlerRootView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    flex: 1,\n    backgroundColor: '#f8f9fa',\n  },\n  container: {\n    flex: 1,\n  },\n  tosContainer: {\n    alignItems: 'center',\n    paddingHorizontal: 20,\n  },\n  background: {\n    width: '10%',\n  },\n  tosTitle: {\n    fontSize: 22,\n    fontWeight: '700',\n    marginVertical: 16,\n    color: '#001a72',\n  },\n  tosSubtitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    marginVertical: 16,\n    color: '#001a72',\n  },\n  tosContent: {\n    fontFamily: 'Aeonik',\n    fontSize: 16,\n    marginBottom: 8,\n    color: '#001a72',\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ced4da',\n    color: '#001a72',\n    borderRadius: 8,\n    width: '80%',\n    padding: 12,\n    fontSize: 16,\n    marginBottom: 20,\n  },\n  stickyButtonContainer: {\n    backgroundColor: '#f8f9ff',\n    paddingVertical: 16,\n    paddingHorizontal: 48,\n    width: '100%',\n  },\n  button: {\n    backgroundColor: '#b58df1',\n    marginVertical: 16,\n    paddingVertical: 12,\n    paddingHorizontal: 48,\n    borderRadius: 32,\n  },\n  buttonText: {\n    fontSize: 18,\n    color: '#f8f9ff',\n    textAlign: 'center',\n  },\n  loginForm: {\n    marginVertical: 32,\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  loginFormTitle: {\n    fontSize: 22,\n    fontFamily: 'Aeonik',\n    color: '#001a72',\n    fontWeight: '600',\n    marginBottom: 8,\n  },\n  loginFormSubtitle: {\n    fontFamily: 'Aeonik',\n    color: '#001a7299',\n    marginBottom: 16,\n  },\n});\n"}}]);