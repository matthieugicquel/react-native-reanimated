"use strict";(self.webpackChunkdocs_reanimated=self.webpackChunkdocs_reanimated||[]).push([[4432],{10431:(e,n,t)=>{t.d(n,{A:()=>c});var a=t(96540),i=t(9176),o=t(62257),r=t(72188),l=t(52773);const s={code:"function CancelAnimationTsx1(){const{offset}=this.__closure;return{transform:[{translateX:offset.value}]};}"};function c(e){let{width:n}=e;const t=(0,l.useSharedValue)(n/2-160),r=(0,l.useAnimatedStyle)(function(){const e=()=>({transform:[{translateX:t.value}]});return e.__closure={offset:t},e.__workletHash=4959159826752,e.__initData=s,e}()),c=()=>{t.value=(0,l.withRepeat)((0,l.withTiming)(t.value>0?-n/2+160:n/2-160,{duration:1500}),-1,!0)};a.useEffect((()=>{c()}),[]);return a.createElement(i.A,{style:d.container},a.createElement(l.default.View,{style:[d.box,r]}),a.createElement(i.A,{style:d.row},a.createElement(o.A,{title:"Cancel animation",onPress:()=>{(0,l.cancelAnimation)(t)}}),a.createElement(o.A,{title:"Start animation",onPress:c})))}const d=r.A.create({container:{flex:1,alignItems:"center",justifyContent:"center",height:"100%"},box:{height:120,width:120,backgroundColor:"#b58df1",borderRadius:20,marginBottom:30},row:{flexDirection:"row",gap:10}})},19912:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>l,metadata:()=>c,toc:()=>m});var a=t(58168),i=(t(96540),t(15680)),o=t(10431),r=t(2940);const l={sidebar_position:7},s="cancelAnimation",c={unversionedId:"core/cancelAnimation",id:"core/cancelAnimation",title:"cancelAnimation",description:"cancelAnimation lets you cancel a running animation paired to a shared value.",source:"@site/docs/core/cancelAnimation.mdx",sourceDirName:"core",slug:"/core/cancelAnimation",permalink:"/react-native-reanimated/docs/next/core/cancelAnimation",draft:!1,editUrl:"https://github.com/software-mansion/react-native-reanimated/edit/main/packages/docs-reanimated/docs/core/cancelAnimation.mdx",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"createAnimatedComponent",permalink:"/react-native-reanimated/docs/next/core/createAnimatedComponent"},next:{title:"Scroll",permalink:"/react-native-reanimated/docs/next/category/scroll"}},d={},m=[{value:"Reference",id:"reference",level:2},{value:"Arguments",id:"arguments",level:3},{value:"<code>sharedValue</code>",id:"sharedvalue",level:4},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:2},{value:"Remarks",id:"remarks",level:2},{value:"Platform compatibility",id:"platform-compatibility",level:2}],u=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.yg)("div",n)},p=u("InteractiveExample"),f=u("PlatformCompatibility"),g={toc:m},y="wrapper";function h(e){let{components:n,...t}=e;return(0,i.yg)(y,(0,a.A)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"cancelanimation"},"cancelAnimation"),(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"cancelAnimation")," lets you cancel a running animation paired to a ",(0,i.yg)("a",{parentName:"p",href:"/docs/fundamentals/glossary#shared-value"},"shared value"),"."),(0,i.yg)("h2",{id:"reference"},"Reference"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-javascript"},"import { cancelAnimation } from 'react-native-reanimated';\n\nfunction App() {\n  const offset = useSharedValue(100);\n\n  const handleCancel = () => {\n    // highlight-next-line\n    cancelAnimation(offset);\n  };\n}\n")),(0,i.yg)("details",null,(0,i.yg)("summary",null,"Type definitions"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"type SharedValue<T> = { value: T };\n\nfunction cancelAnimation<T>(sharedValue: SharedValue<T>): void;\n"))),(0,i.yg)("h3",{id:"arguments"},"Arguments"),(0,i.yg)("h4",{id:"sharedvalue"},(0,i.yg)("inlineCode",{parentName:"h4"},"sharedValue")),(0,i.yg)("p",null,"The shared value of a running animation that you want to cancel. If no animation is running, the ",(0,i.yg)("inlineCode",{parentName:"p"},"cancelAnimation")," function does nothing."),(0,i.yg)("h3",{id:"returns"},"Returns"),(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"cancelAnimation")," returns ",(0,i.yg)("inlineCode",{parentName:"p"},"undefined"),"."),(0,i.yg)("h2",{id:"example"},"Example"),(0,i.yg)(p,{src:r.A,component:o.A,mdxType:"InteractiveExample"}),(0,i.yg)("h2",{id:"remarks"},"Remarks"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"You can resume the animation by assigning the same animation (i.e. ",(0,i.yg)("inlineCode",{parentName:"li"},"withSpring"),", ",(0,i.yg)("inlineCode",{parentName:"li"},"withTiming"),") to the shared value again.")),(0,i.yg)("h2",{id:"platform-compatibility"},"Platform compatibility"),(0,i.yg)(f,{android:!0,ios:!0,web:!0,mdxType:"PlatformCompatibility"}))}h.isMDXComponent=!0},2940:(e,n,t)=>{t.d(n,{A:()=>a});const a="import React from 'react';\nimport { StyleSheet, View, Button } from 'react-native';\nimport Animated, {\n  useSharedValue,\n  useAnimatedStyle,\n  withTiming,\n  withRepeat,\n  cancelAnimation,\n} from 'react-native-reanimated';\n\ninterface AppProps {\n  width: number;\n}\n\nexport default function App({ width }: AppProps) {\n  const offset = useSharedValue<number>(width / 2 - 160);\n\n  const animatedStyles = useAnimatedStyle(() => ({\n    transform: [{ translateX: offset.value }],\n  }));\n\n  const startAnimation = () => {\n    offset.value = withRepeat(\n      withTiming(offset.value > 0 ? -width / 2 + 160 : width / 2 - 160, {\n        duration: 1500,\n      }),\n      -1,\n      true\n    );\n  };\n\n  React.useEffect(() => {\n    startAnimation();\n  }, []);\n\n  const handleCancelAnimation = () => {\n    // highlight-next-line\n    cancelAnimation(offset);\n  };\n\n  return (\n    <View style={styles.container}>\n      <Animated.View style={[styles.box, animatedStyles]} />\n      <View style={styles.row}>\n        <Button title=\"Cancel animation\" onPress={handleCancelAnimation} />\n        <Button title=\"Start animation\" onPress={startAnimation} />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n  },\n  box: {\n    height: 120,\n    width: 120,\n    backgroundColor: '#b58df1',\n    borderRadius: 20,\n    marginBottom: 30,\n  },\n  row: {\n    flexDirection: 'row',\n    gap: 10,\n  },\n});\n"},62257:(e,n,t)=>{t.d(n,{A:()=>c});var a=t(96540),i=t(72188),o=t(46413),r=t(78506),l=a.forwardRef(((e,n)=>{var t=e.accessibilityLabel,i=e.color,l=e.disabled,c=e.onPress,d=e.testID,m=e.title;return a.createElement(o.A,{accessibilityLabel:t,accessibilityRole:"button",disabled:l,focusable:!l,onPress:c,ref:n,style:[s.button,i&&{backgroundColor:i},l&&s.buttonDisabled],testID:d},a.createElement(r.A,{style:[s.text,l&&s.textDisabled]},m))}));l.displayName="Button";var s=i.A.create({button:{backgroundColor:"#2196F3",borderRadius:2},text:{color:"#fff",fontWeight:"500",padding:8,textAlign:"center",textTransform:"uppercase"},buttonDisabled:{backgroundColor:"#dfdfdf"},textDisabled:{color:"#a1a1a1"}});const c=l}}]);