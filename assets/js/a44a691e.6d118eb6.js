"use strict";(self.webpackChunkdocs_reanimated=self.webpackChunkdocs_reanimated||[]).push([[7264],{12735:(e,t,n)=>{n.d(t,{A:()=>y});var a=n(96540),i=n(9176),o=n(62257),l=n(72188),r=n(52747),d=n(98348);const s=1e3,m=500,c=["React","Native","Reanimated"];function y(e){let{width:t}=e;const n=(0,d.A)(),[l,y]=(0,a.useState)(!1),h=(0,r.useSharedValue)(0),p=(0,r.useSharedValue)(0),g=(0,r.useSharedValue)(0);return a.createElement(i.A,{style:u.container},a.createElement(i.A,{style:u.text},a.createElement(r.default.Text,{style:[u.label,n,{opacity:h}]},c[0]),a.createElement(r.default.Text,{style:[u.label,n,{opacity:p}]},c[1]),t>450&&a.createElement(r.default.Text,{style:[u.label,n,{opacity:g}]},c[2])),t<=450&&a.createElement(r.default.Text,{style:[u.label,n,{opacity:g}]},c[2]),a.createElement(o.A,{title:l?"Hide":"Show",onPress:()=>{l?(g.value=(0,r.withDelay)(0*m,(0,r.withTiming)(0,{duration:s})),p.value=(0,r.withDelay)(1*m,(0,r.withTiming)(0,{duration:s})),h.value=(0,r.withDelay)(2*m,(0,r.withTiming)(0,{duration:s}))):(h.value=(0,r.withDelay)(0*m,(0,r.withTiming)(1,{duration:s})),p.value=(0,r.withDelay)(1*m,(0,r.withTiming)(1,{duration:s})),g.value=(0,r.withDelay)(2*m,(0,r.withTiming)(1,{duration:s}))),y(!l)}}))}const u=l.A.create({container:{flex:1,alignItems:"center",justifyContent:"center",height:"100%",flexDirection:"column"},text:{flexDirection:"row"},tab:{paddingHorizontal:20,paddingVertical:10},label:{fontSize:42,textAlign:"center",fontWeight:"bold",marginRight:8},divider:{borderRightWidth:1,borderRightColor:"#ddd"},animatedBorder:{height:8,width:64,backgroundColor:"tomato",borderRadius:20}})},98348:(e,t,n)=>{n.d(t,{A:()=>o});var a=n(50264),i=n(72188);const o=()=>{const{colorScheme:e}=(0,a.Ut)();return"light"===e?l.darkText:l.lightText},l=i.A.create({lightText:{color:"var(--swm-off-white)"},darkText:{color:"var(--swm-navy-light-100)"}})},94745:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>d,default:()=>b,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var a=n(58168),i=(n(96540),n(15680)),o=n(12735),l=n(36768);const r={sidebar_position:6},d="withDelay",s={unversionedId:"animations/withDelay",id:"animations/withDelay",title:"withDelay",description:"withDelay is an animation modifier that lets you start an animation with a delay.",source:"@site/docs/animations/withDelay.mdx",sourceDirName:"animations",slug:"/animations/withDelay",permalink:"/react-native-reanimated/docs/next/animations/withDelay",draft:!1,editUrl:"https://github.com/software-mansion/react-native-reanimated/edit/main/packages/docs-reanimated/docs/animations/withDelay.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"withRepeat",permalink:"/react-native-reanimated/docs/next/animations/withRepeat"},next:{title:"withClamp",permalink:"/react-native-reanimated/docs/next/animations/withClamp"}},m={},c=[{value:"Reference",id:"reference",level:2},{value:"Arguments",id:"arguments",level:3},{value:"<code>delayMs</code>",id:"delayms",level:4},{value:"<code>delayedAnimation</code>",id:"delayedanimation",level:4},{value:"<code>reduceMotion</code> <Optional />",id:"reducemotion-",level:4},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:2},{value:"Platform compatibility",id:"platform-compatibility",level:2}],y=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.yg)("div",t)},u=y("Optional"),h=y("InteractiveExample"),p=y("PlatformCompatibility"),g={toc:c},w="wrapper";function b(e){let{components:t,...n}=e;return(0,i.yg)(w,(0,a.A)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"withdelay"},"withDelay"),(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"withDelay")," is an ",(0,i.yg)("a",{parentName:"p",href:"/docs/fundamentals/glossary#animation-modifier"},"animation modifier")," that lets you start an animation with a delay."),(0,i.yg)("h2",{id:"reference"},"Reference"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-javascript"},"import { withDelay } from 'react-native-reanimated';\n\nfunction App() {\n  sv.value = withDelay(500, withTiming(0));\n  // ...\n}\n")),(0,i.yg)("details",null,(0,i.yg)("summary",null,"Type definitions"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"type AnimatableValue = number | string | number[];\n\nfunction withDelay<T extends AnimatableValue>(\n  delayMs: number,\n  delayedAnimation: T,\n  reduceMotion?: ReduceMotion\n): T;\n\nenum ReduceMotion {\n  System = 'system',\n  Always = 'always',\n  Never = 'never',\n}\n"))),(0,i.yg)("h3",{id:"arguments"},"Arguments"),(0,i.yg)("h4",{id:"delayms"},(0,i.yg)("inlineCode",{parentName:"h4"},"delayMs")),(0,i.yg)("p",null,"Duration (in milliseconds) before the animation starts."),(0,i.yg)("h4",{id:"delayedanimation"},(0,i.yg)("inlineCode",{parentName:"h4"},"delayedAnimation")),(0,i.yg)("p",null,"Animation to delay."),(0,i.yg)("h4",{id:"reducemotion-"},(0,i.yg)("inlineCode",{parentName:"h4"},"reduceMotion")," ",(0,i.yg)(u,{mdxType:"Optional"})),(0,i.yg)("p",null,"A parameter that determines how the animation responds to the device's reduced motion accessibility setting."),(0,i.yg)("h3",{id:"returns"},"Returns"),(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"withDelay")," returns an ",(0,i.yg)("a",{parentName:"p",href:"/docs/fundamentals/glossary#animation-object"},"animation object")," which holds the current state of the animation. It can be either assigned directly to a ",(0,i.yg)("a",{parentName:"p",href:"/docs/fundamentals/glossary#shared-value"},"shared value")," or can be used as a value for a style object returned from ",(0,i.yg)("a",{parentName:"p",href:"/docs/core/useAnimatedStyle"},"useAnimatedStyle"),"."),(0,i.yg)("h2",{id:"example"},"Example"),(0,i.yg)(h,{src:l.A,component:o.A,mdxType:"InteractiveExample"}),(0,i.yg)("h2",{id:"platform-compatibility"},"Platform compatibility"),(0,i.yg)(p,{android:!0,ios:!0,web:!0,mdxType:"PlatformCompatibility"}))}b.isMDXComponent=!0},36768:(e,t,n)=>{n.d(t,{A:()=>a});const a="import React, { useState } from 'react';\nimport { Button, StyleSheet, View } from 'react-native';\nimport Animated, {\n  useSharedValue,\n  withDelay,\n  withTiming,\n} from 'react-native-reanimated';\nimport useThemedTextStyle from '@site/src/hooks/useThemedTextStyle';\n\nconst DURATION = 1000;\nconst DELAY = 500;\n\nconst text = ['React', 'Native', 'Reanimated'];\n\ninterface AppProps {\n  width: number;\n}\n\nexport default function App({ width }: AppProps) {\n  const textColor = useThemedTextStyle();\n  const [isShown, setShown] = useState<boolean>(false);\n\n  const opacity1 = useSharedValue<number>(0);\n  const opacity2 = useSharedValue<number>(0);\n  const opacity3 = useSharedValue<number>(0);\n\n  // prettier-ignore\n  const show = () => {\n    if (isShown) {\n      opacity3.value = withDelay(0 * DELAY, withTiming(0, { duration: DURATION }));\n      opacity2.value = withDelay(1 * DELAY, withTiming(0, { duration: DURATION }));\n      opacity1.value = withDelay(2 * DELAY, withTiming(0, { duration: DURATION }));\n    } else {\n      opacity1.value = withDelay(0 * DELAY, withTiming(1, { duration: DURATION }));\n      opacity2.value = withDelay(1 * DELAY, withTiming(1, { duration: DURATION }));\n      opacity3.value = withDelay(2 * DELAY, withTiming(1, { duration: DURATION }));\n    }\n\n    setShown(!isShown);\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.text}>\n        <Animated.Text style={[styles.label, textColor, { opacity: opacity1 }]}>\n          {text[0]}\n        </Animated.Text>\n        <Animated.Text style={[styles.label, textColor, { opacity: opacity2 }]}>\n          {text[1]}\n        </Animated.Text>\n        {width > 450 && (\n          <Animated.Text\n            style={[styles.label, textColor, { opacity: opacity3 }]}>\n            {text[2]}\n          </Animated.Text>\n        )}\n      </View>\n      {width <= 450 && (\n        <Animated.Text style={[styles.label, textColor, { opacity: opacity3 }]}>\n          {text[2]}\n        </Animated.Text>\n      )}\n      <Button title={isShown ? 'Hide' : 'Show'} onPress={show} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    flexDirection: 'column',\n  },\n  text: {\n    flexDirection: 'row',\n  },\n  tab: {\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n  },\n  label: {\n    fontSize: 42,\n    textAlign: 'center',\n    fontWeight: 'bold',\n    marginRight: 8,\n  },\n  divider: {\n    borderRightWidth: 1,\n    borderRightColor: '#ddd',\n  },\n  animatedBorder: {\n    height: 8,\n    width: 64,\n    backgroundColor: 'tomato',\n    borderRadius: 20,\n  },\n});\n"},62257:(e,t,n)=>{n.d(t,{A:()=>s});var a=n(96540),i=n(72188),o=n(46413),l=n(78506),r=a.forwardRef(((e,t)=>{var n=e.accessibilityLabel,i=e.color,r=e.disabled,s=e.onPress,m=e.testID,c=e.title;return a.createElement(o.A,{accessibilityLabel:n,accessibilityRole:"button",disabled:r,focusable:!r,onPress:s,ref:t,style:[d.button,i&&{backgroundColor:i},r&&d.buttonDisabled],testID:m},a.createElement(l.A,{style:[d.text,r&&d.textDisabled]},c))}));r.displayName="Button";var d=i.A.create({button:{backgroundColor:"#2196F3",borderRadius:2},text:{color:"#fff",fontWeight:"500",padding:8,textAlign:"center",textTransform:"uppercase"},buttonDisabled:{backgroundColor:"#dfdfdf"},textDisabled:{color:"#a1a1a1"}});const s=r}}]);