"use strict";(self.webpackChunkdocs_reanimated=self.webpackChunkdocs_reanimated||[]).push([[1819],{15680:(e,n,t)=>{t.d(n,{xA:()=>u,yg:()=>g});var r=t(96540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),d=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=d(e.components);return r.createElement(l.Provider,{value:n},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=d(t),m=a,g=c["".concat(l,".").concat(m)]||c[m]||p[m]||i;return t?r.createElement(g,o(o({ref:n},u),{},{components:t})):r.createElement(g,o({ref:n},u))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[c]="string"==typeof e?e:a,o[1]=s;for(var d=2;d<i;d++)o[d]=t[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},92367:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>x,contentTitle:()=>v,default:()=>_,frontMatter:()=>f,metadata:()=>b,toc:()=>w});var r=t(58168),a=t(96540),i=t(15680),o=t(9176),s=t(72188),l=t(55535),d=t(85285);const u={code:"function AnimatedGestureHandlerTsx1(_,ctx){const{offset}=this.__closure;ctx.startX=offset.value;}"},c={code:"function AnimatedGestureHandlerTsx2(event,ctx){const{offset}=this.__closure;offset.value=ctx.startX+event.translationX;}"},p={code:"function AnimatedGestureHandlerTsx3(_){const{offset,withSpring}=this.__closure;offset.value=withSpring(0);}"},m={code:"function AnimatedGestureHandlerTsx4(){const{offset}=this.__closure;return{transform:[{translateX:offset.value}]};}"};function g(){const e=(0,l.useSharedValue)(0),n=(0,l.useAnimatedGestureHandler)({onStart:function(){const n=function(n,t){t.startX=e.value};return n.__closure={offset:e},n.__workletHash=4426369847894,n.__initData=u,n}(),onActive:function(){const n=function(n,t){e.value=t.startX+n.translationX};return n.__closure={offset:e},n.__workletHash=0x919b3c1877c,n.__initData=c,n}(),onEnd:function(){const n=function(n){e.value=(0,l.withSpring)(0)};return n.__closure={offset:e,withSpring:l.withSpring},n.__workletHash=0xf90b0a78853,n.__initData=p,n}()}),t=(0,l.useAnimatedStyle)(function(){const n=()=>({transform:[{translateX:e.value}]});return n.__closure={offset:e},n.__workletHash=3146015790997,n.__initData=m,n}());return a.createElement(o.A,{style:h.container},a.createElement(d.pU,{onGestureEvent:n,onHandlerStateChange:n},a.createElement(l.default.View,{style:[h.circle,t]})))}const h=s.A.create({container:{flex:1,alignItems:"center",justifyContent:"center",height:"100%"},circle:{height:120,width:120,backgroundColor:"#b58df1",borderRadius:500,cursor:"grab"}}),y="import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport Animated, {\n  useSharedValue,\n  useAnimatedStyle,\n  useAnimatedGestureHandler,\n  withSpring,\n} from 'react-native-reanimated';\nimport { PanGestureHandler } from 'react-native-gesture-handler';\n\nexport default function App() {\n  const offset = useSharedValue(0);\n\n  const gestureHandler = useAnimatedGestureHandler({\n    onStart: (_, ctx) => {\n      ctx.startX = offset.value;\n    },\n    onActive: (event, ctx) => {\n      offset.value = ctx.startX + event.translationX;\n    },\n    onEnd: (_) => {\n      offset.value = withSpring(0);\n    },\n  });\n\n  const animatedStyle = useAnimatedStyle(() => ({\n    transform: [{ translateX: offset.value }],\n  }));\n\n  return (\n    <View style={styles.container}>\n      <PanGestureHandler\n        onGestureEvent={gestureHandler}\n        onHandlerStateChange={gestureHandler}>\n        <Animated.View style={[styles.circle, animatedStyle]} />\n      </PanGestureHandler>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n  },\n  circle: {\n    height: 120,\n    width: 120,\n    backgroundColor: '#b58df1',\n    borderRadius: 500,\n    cursor: 'grab',\n  },\n});\n",f={sidebar_position:5},v="useAnimatedGestureHandler",b={unversionedId:"utilities/useAnimatedGestureHandler",id:"version-3.x/utilities/useAnimatedGestureHandler",title:"useAnimatedGestureHandler",description:"This API is deprecated, doesn't receive any updates and will be removed in the next major version of Reanimated.",source:"@site/versioned_docs/version-3.x/utilities/useAnimatedGestureHandler.mdx",sourceDirName:"utilities",slug:"/utilities/useAnimatedGestureHandler",permalink:"/react-native-reanimated/docs/utilities/useAnimatedGestureHandler",draft:!1,editUrl:"https://github.com/software-mansion/react-native-reanimated/edit/main/packages/docs-reanimated/versioned_docs/version-3.x/utilities/useAnimatedGestureHandler.mdx",tags:[],version:"3.x",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"getRelativeCoords",permalink:"/react-native-reanimated/docs/utilities/getRelativeCoords"},next:{title:"Advanced APIs",permalink:"/react-native-reanimated/docs/category/advanced-apis"}},x={},w=[{value:"Reference",id:"reference",level:2},{value:"Arguments",id:"arguments",level:3},{value:"<code>gestureHandlers</code>",id:"gesturehandlers",level:4},{value:"<code>dependencies</code> <Optional/>",id:"dependencies-",level:4},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:2},{value:"Platform compatibility",id:"platform-compatibility",level:2}],H=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.yg)("div",n)},N=H("Optional"),A=H("InteractiveExample"),C={toc:w},G="wrapper";function _(e){let{components:n,...t}=e;return(0,i.yg)(G,(0,r.A)({},C,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"useanimatedgesturehandler"},"useAnimatedGestureHandler"),(0,i.yg)("admonition",{type:"danger"},(0,i.yg)("p",{parentName:"admonition"},"This API is deprecated, doesn't receive any updates and will be removed in the next major version of Reanimated."),(0,i.yg)("p",{parentName:"admonition"},"See the ",(0,i.yg)("a",{parentName:"p",href:"https://docs.swmansion.com/react-native-gesture-handler/docs/guides/upgrading-to-2#upgrading-to-the-new-api"},(0,i.yg)("strong",{parentName:"a"},"Upgrading to the new API introduced in Gesture Handler 2"))," migration guide.")),(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"useAnimatedGestureHandler")," lets you create animations based on ",(0,i.yg)("a",{parentName:"p",href:"https://docs.swmansion.com/react-native-gesture-handler/docs/category/gesture-handlers-legacy"},"gesture handlers"),"."),(0,i.yg)("p",null,"You need to pass the object defined using ",(0,i.yg)("inlineCode",{parentName:"p"},"useAnimatedGestureHandler")," to the ",(0,i.yg)("inlineCode",{parentName:"p"},"onGestureEvent")," property of a gesture handler component."),(0,i.yg)("p",null,"This hook requires ",(0,i.yg)("inlineCode",{parentName:"p"},"react-native-gesture-handler")," ",(0,i.yg)("a",{parentName:"p",href:"https://docs.swmansion.com/react-native-gesture-handler/docs/#installation"},"installed and configured")," in your project."),(0,i.yg)("h2",{id:"reference"},"Reference"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-jsx"},"import { useAnimatedGestureHandler } from 'react-native-reanimated';\nimport { PanGestureHandler } from 'react-native-gesture-handler';\n\nfunction App() {\n  const x = useSharedValue(0);\n\n  // highlight-start\n  const gestureHandler = useAnimatedGestureHandler({\n    onStart: (_, ctx) => {\n      ctx.startX = x.value;\n    },\n    onActive: (event, ctx) => {\n      x.value = ctx.startX + event.translationX;\n    },\n  });\n  // highlight-end\n\n  return (\n    <PanGestureHandler onGestureEvent={gestureHandler}>\n      <Animated.View />\n    </PanGestureHandler>\n  );\n}\n")),(0,i.yg)("details",null,(0,i.yg)("summary",null,"Type definitions"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"interface GestureHandlers<\n  Event extends NativeEventWrapper<PropsUsedInUseAnimatedGestureHandler>,\n  Context extends Record<string, unknown>\n> {\n  [key: string]: GestureHandler<Event, Context> | undefined;\n  onStart?: GestureHandler<Event, Context>;\n  onActive?: GestureHandler<Event, Context>;\n  onEnd?: GestureHandler<Event, Context>;\n  onFail?: GestureHandler<Event, Context>;\n  onCancel?: GestureHandler<Event, Context>;\n  onFinish?: GestureHandler<Event, Context>;\n}\n\n// highlight-start\nfunction useAnimatedGestureHandler<\n  Event extends NativeEventWrapper<PropsUsedInUseAnimatedGestureHandler> = DefaultEvent,\n  Context extends Record<string, unknown> = Record<string, unknown>\n>(handlers: GestureHandlers<Event, Context>, dependencies?: DependencyList);\n// highlight-end\n"))),(0,i.yg)("h3",{id:"arguments"},"Arguments"),(0,i.yg)("h4",{id:"gesturehandlers"},(0,i.yg)("inlineCode",{parentName:"h4"},"gestureHandlers")),(0,i.yg)("p",null,"The first argument is an object that can carry one or more handlers.\nYou can set the handlers under the following keys: ",(0,i.yg)("inlineCode",{parentName:"p"},"onStart"),", ",(0,i.yg)("inlineCode",{parentName:"p"},"onActive"),", ",(0,i.yg)("inlineCode",{parentName:"p"},"onEnd"),", ",(0,i.yg)("inlineCode",{parentName:"p"},"onFail"),", ",(0,i.yg)("inlineCode",{parentName:"p"},"onCancel"),", ",(0,i.yg)("inlineCode",{parentName:"p"},"onFinish"),"."),(0,i.yg)("p",null,"Each of the specified handlers will be triggered depending on the current state of the attached gesture handler.\nRead more about gesture handling states in the ",(0,i.yg)("a",{parentName:"p",href:"https://docs.swmansion.com/react-native-gesture-handler/docs/under-the-hood/state"},"Gesture Handler documentation"),".\nThe handler receives the following arguments:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"event")," ","[object]"," - an event object carrying the event payload.\nThe payload will be different depending on the type of the gesture handler to which the callback is attached to (",(0,i.yg)("inlineCode",{parentName:"p"},"PanGestureHandler"),", ",(0,i.yg)("inlineCode",{parentName:"p"},"RotationGestureHandler"),", etc.).")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"context")," ","[object]"," - a JavaScript object that can be used to store some state. You can read and write any data to it. This object persists between events and across handlers for all the selected states."))),(0,i.yg)("h4",{id:"dependencies-"},(0,i.yg)("inlineCode",{parentName:"h4"},"dependencies")," ",(0,i.yg)(N,{mdxType:"Optional"})),(0,i.yg)("p",null,"An optional array of dependencies."),(0,i.yg)("p",null,"Only relevant when using Reanimated ",(0,i.yg)("a",{parentName:"p",href:"https://docs.swmansion.com/react-native-reanimated/docs/guides/web-support#web-without-the-babel-plugin"},"without the Babel plugin on the Web"),"."),(0,i.yg)("h3",{id:"returns"},"Returns"),(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"useAnimatedGestureHandler")," returns a handler object that can be attached to one of the gesture handler components provided by the ",(0,i.yg)("inlineCode",{parentName:"p"},"react-native-gesture-handler")," library.\nYou need to pass this object to the ",(0,i.yg)("inlineCode",{parentName:"p"},"onGestureEvent")," property of a gesture handler."),(0,i.yg)("h2",{id:"example"},"Example"),(0,i.yg)(A,{src:y,component:g,label:"Grab and drag the circle",mdxType:"InteractiveExample"}),(0,i.yg)("h2",{id:"platform-compatibility"},"Platform compatibility"),(0,i.yg)("div",{className:"platform-compatibility"},(0,i.yg)("table",null,(0,i.yg)("thead",{parentName:"table"},(0,i.yg)("tr",{parentName:"thead"},(0,i.yg)("th",{parentName:"tr",align:null},"Android"),(0,i.yg)("th",{parentName:"tr",align:null},"iOS"),(0,i.yg)("th",{parentName:"tr",align:null},"Web"))),(0,i.yg)("tbody",{parentName:"table"},(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"\u2705"),(0,i.yg)("td",{parentName:"tr",align:null},"\u2705"),(0,i.yg)("td",{parentName:"tr",align:null},"\u26a0\ufe0f"))))),(0,i.yg)("p",null,"*"," On Web, you have to pass returned handler object to both ",(0,i.yg)("inlineCode",{parentName:"p"},"onGestureEvent")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"onHandlerStateChange")," parameters."))}_.isMDXComponent=!0}}]);