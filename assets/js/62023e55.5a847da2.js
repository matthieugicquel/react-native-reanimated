"use strict";(self.webpackChunkdocs_reanimated=self.webpackChunkdocs_reanimated||[]).push([[2803],{15680:(e,n,t)=>{t.d(n,{xA:()=>d,yg:()=>f});var a=t(96540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=a.createContext({}),m=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},d=function(e){var n=m(e.components);return a.createElement(s.Provider,{value:n},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=m(t),u=i,f=c["".concat(s,".").concat(u)]||c[u]||p[u]||o;return t?a.createElement(f,r(r({ref:n},d),{},{components:t})):a.createElement(f,r({ref:n},d))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,r=new Array(o);r[0]=u;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[c]="string"==typeof e?e:i,r[1]=l;for(var m=2;m<o;m++)r[m]=t[m];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},97259:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>g,contentTitle:()=>f,default:()=>k,frontMatter:()=>u,metadata:()=>y,toc:()=>h});var a=t(58168),i=t(96540),o=t(15680),r=t(9176),l=t(72188),s=t(52773);const m={from:{transform:[{scale:.8},{rotateZ:"-15deg"}]},to:{transform:[{scale:1.2},{rotateZ:"15deg"}]}};function d(){return i.createElement(r.A,{style:c.container},i.createElement(s.default.View,{style:[c.box,{animationName:m,animationDuration:"1s",animationTimingFunction:"easeInOut",animationFillMode:"forwards"}]}))}const c=l.A.create({container:{flex:1,alignItems:"center",justifyContent:"center",height:"100%"},box:{height:120,width:120,backgroundColor:"#fa7f7c",margin:64}}),p="import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport Animated, { CSSAnimationKeyframes } from 'react-native-reanimated';\n\nconst pulse: CSSAnimationKeyframes = {\n  from: {\n    transform: [{ scale: 0.8 }, { rotateZ: '-15deg' }],\n  },\n  to: {\n    transform: [{ scale: 1.2 }, { rotateZ: '15deg' }],\n  },\n};\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Animated.View\n        style={[\n          styles.box,\n          {\n            animationName: pulse,\n            animationDuration: '1s',\n            animationTimingFunction: 'easeInOut',\n            // highlight-next-line\n            animationFillMode: 'forwards',\n          },\n        ]}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n  },\n  box: {\n    height: 120,\n    width: 120,\n    backgroundColor: '#fa7f7c',\n    margin: 64,\n  },\n});\n",u={sidebar_position:7},f="animationFillMode",y={unversionedId:"css-animations/animation-fill-mode",id:"css-animations/animation-fill-mode",title:"animationFillMode",description:"animationFillMode lets you specify how the computed styles will be persisted before the animation runs and after it finishes. Defaults to none.",source:"@site/docs/css-animations/animation-fill-mode.mdx",sourceDirName:"css-animations",slug:"/css-animations/animation-fill-mode",permalink:"/react-native-reanimated/docs/next/css-animations/animation-fill-mode",draft:!1,editUrl:"https://github.com/software-mansion/react-native-reanimated/edit/main/packages/docs-reanimated/docs/css-animations/animation-fill-mode.mdx",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"animationIterationCount",permalink:"/react-native-reanimated/docs/next/css-animations/animation-iteration-count"},next:{title:"animationPlayState",permalink:"/react-native-reanimated/docs/next/css-animations/animation-play-state"}},g={},h=[{value:"Reference",id:"reference",level:2},{value:"Values",id:"values",level:3},{value:"<code>none</code>",id:"none",level:4},{value:"<code>forwards</code>",id:"forwards",level:4},{value:"<code>backwards</code>",id:"backwards",level:4},{value:"<code>both</code>",id:"both",level:4},{value:"<code>&lt;animation fill mode[]&gt;</code>",id:"animation-fill-mode",level:4},{value:"Remarks",id:"remarks",level:2},{value:"Platform compatibility",id:"platform-compatibility",level:2}],b=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.yg)("div",n)},v=b("InteractiveExample"),w=b("Indent"),C=b("PlatformCompatibility"),x={toc:h},N="wrapper";function k(e){let{components:n,...t}=e;return(0,o.yg)(N,(0,a.A)({},x,t,{components:n,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"animationfillmode"},"animationFillMode"),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"animationFillMode")," lets you specify how the computed styles will be persisted before the animation runs and after it finishes. Defaults to ",(0,o.yg)("inlineCode",{parentName:"p"},"none"),"."),(0,o.yg)(v,{src:p,component:d,mdxType:"InteractiveExample"}),(0,o.yg)("h2",{id:"reference"},"Reference"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},"function App() {\n  return (\n    <Animated.View\n      style={{\n        animationName: {\n          '100%': {\n            transform: [{ translateX: 100 }],\n          },\n        },\n        animationDuration: '300ms',\n        // highlight-next-line\n        animationFillMode: 'forwards',\n      }}\n    />\n  );\n}\n")),(0,o.yg)("details",null,(0,o.yg)("summary",null,"Type definitions"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-typescript"},"type CSSAnimationFillMode = 'none' | 'forwards' | 'backwards' | 'both';\n\nanimationFillMode: CSSAnimationFillMode | CSSAnimationFillMode[];\n"))),(0,o.yg)("h3",{id:"values"},"Values"),(0,o.yg)("h4",{id:"none"},(0,o.yg)("inlineCode",{parentName:"h4"},"none")),(0,o.yg)("p",null,"After the animation finishes the styles computed from keyframes are discarded."),(0,o.yg)("h4",{id:"forwards"},(0,o.yg)("inlineCode",{parentName:"h4"},"forwards")),(0,o.yg)("p",null,"Persists the last keyframe of an animation."),(0,o.yg)("h4",{id:"backwards"},(0,o.yg)("inlineCode",{parentName:"h4"},"backwards")),(0,o.yg)("p",null,"Persists the first keyframe of an animation."),(0,o.yg)("h4",{id:"both"},(0,o.yg)("inlineCode",{parentName:"h4"},"both")),(0,o.yg)("p",null,"Styles computed from both from first and last keyframes are persisted."),(0,o.yg)("h4",{id:"animation-fill-mode"},(0,o.yg)("inlineCode",{parentName:"h4"},"<animation fill mode[]>")),(0,o.yg)("p",null,"An array of animation fill mode values. The order in this array corresponds to the array of style properties passed to the ",(0,o.yg)("a",{parentName:"p",href:"/docs/next/css-animations/animation-name"},(0,o.yg)("inlineCode",{parentName:"a"},"animationName")),"."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},"// highlight-next-line\nanimationFillMode: ['forwards', 'backwards', 'none'];\nanimationName: [bounceIn, move, slide];\n")),(0,o.yg)("p",null,"In the following example, ",(0,o.yg)("inlineCode",{parentName:"p"},"bounceIn")," animation would persist the last keyframe of an animation, ",(0,o.yg)("inlineCode",{parentName:"p"},"move")," would persist the first keyframe, and ",(0,o.yg)("inlineCode",{parentName:"p"},"slide")," would discard the computed styles."),(0,o.yg)("h2",{id:"remarks"},"Remarks"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},"The retained computed style also depends on the ",(0,o.yg)("inlineCode",{parentName:"p"},"animationDirection")," and ",(0,o.yg)("inlineCode",{parentName:"p"},"animationIterationCount")," properties.")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},"The ",(0,o.yg)("inlineCode",{parentName:"p"},"forwards")," and ",(0,o.yg)("inlineCode",{parentName:"p"},"both")," fill mode options may not work correctly when combined with fractional ",(0,o.yg)("inlineCode",{parentName:"p"},"animationIterationCount"),", particularly when relative units are used, and those relative values change after the animation ends."))),(0,o.yg)(w,{mdxType:"Indent"},(0,o.yg)("p",null,"For instance, if a child view's size depends on its parent's size and the parent resizes after the animation ends, the child view may not reflect this change. This issue occurs when keyframes use a mix of relative (e.g., percentage-based) and absolute (numeric) units. Once the animation completes, the view retains the size from the last calculated keyframe and does not update according to the new parent size."),(0,o.yg)("p",null,"In such cases, the view remains static instead of adapting to the updated size as expected.")),(0,o.yg)("h2",{id:"platform-compatibility"},"Platform compatibility"),(0,o.yg)(C,{android:!0,ios:!0,web:!0,mdxType:"PlatformCompatibility"}))}k.isMDXComponent=!0}}]);