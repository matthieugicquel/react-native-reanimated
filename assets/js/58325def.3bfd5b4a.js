"use strict";(self.webpackChunkdocs_reanimated=self.webpackChunkdocs_reanimated||[]).push([[8097],{51032:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>w,contentTitle:()=>b,default:()=>T,frontMatter:()=>h,metadata:()=>x,toc:()=>v});var i=n(58168),r=n(96540),a=n(15680),o=n(9176),s=n(62257),l=n(72188),c=n(52747);function d(){const[e,t]=(0,r.useReducer)((e=>!e),!1);return r.createElement(o.A,{style:m.container},r.createElement(c.default.View,{style:[m.box,{transform:[{translateX:e?150:-150}],transitionProperty:"transform",transitionDuration:e?"300ms":"1.5s"}]}),r.createElement(s.A,{onPress:t,title:"Click me"}))}const m=l.A.create({container:{flex:1,alignItems:"center",justifyContent:"center",height:"100%"},box:{height:120,width:120,backgroundColor:"#fa7f7c",marginVertical:64}}),u="import React, { useReducer } from 'react';\nimport { StyleSheet, View, Button } from 'react-native';\nimport Animated from 'react-native-reanimated';\n\nexport default function App() {\n  const [isToggled, toggle] = useReducer((s) => !s, false);\n\n  return (\n    <View style={styles.container}>\n      <Animated.View\n        style={[\n          styles.box,\n          {\n            transform: [{ translateX: isToggled ? 150 : -150 }],\n            transitionProperty: 'transform',\n            // highlight-next-line\n            transitionDuration: isToggled ? '300ms' : '1.5s',\n          },\n        ]}\n      />\n      <Button onPress={toggle} title=\"Click me\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n  },\n  box: {\n    height: 120,\n    width: 120,\n    backgroundColor: '#fa7f7c',\n    // borderRadius: 20,\n    marginVertical: 64,\n  },\n});\n",p=["#fa7f7c","#b58df1","#ffe780","#82cab2","#87cce8"];function g(){const[e,t]=(0,r.useReducer)((e=>!e),!1);return r.createElement(o.A,{style:y.container},r.createElement(o.A,{style:y.row},p.map(((t,n)=>r.createElement(c.default.View,{key:t,style:[y.box,{backgroundColor:t,transform:[{rotateY:e?"0deg":"180deg"}],borderRadius:e?16:0,transitionProperty:["transform","borderRadius"],transitionDuration:[400*n+500,"0.5s"]}]})))),r.createElement(s.A,{onPress:t,title:"Click me"}))}const y=l.A.create({container:{flex:1,alignItems:"center",justifyContent:"center",height:"100%"},row:{flexDirection:"row",gap:16},box:{width:100,height:100,borderRadius:20,marginVertical:64}}),f="import React, { useReducer } from 'react';\nimport { StyleSheet, View, Button } from 'react-native';\nimport Animated from 'react-native-reanimated';\n\nconst COLORS = ['#fa7f7c', '#b58df1', '#ffe780', '#82cab2', '#87cce8'];\n\nexport default function App() {\n  const [isToggled, toggle] = useReducer((s) => !s, false);\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.row}>\n        {COLORS.map((color, id) => (\n          <Animated.View\n            key={color}\n            style={[\n              styles.box,\n              {\n                backgroundColor: color,\n                transform: [{ rotateY: isToggled ? '0deg' : '180deg' }],\n                borderRadius: isToggled ? 16 : 0,\n                transitionProperty: ['transform', 'borderRadius'],\n                // highlight-next-line\n                transitionDuration: [400 * id + 500, '0.5s'],\n              },\n            ]}\n          />\n        ))}\n      </View>\n      <Button onPress={toggle} title=\"Click me\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n  },\n  row: {\n    flexDirection: 'row',\n    gap: 16,\n  },\n  box: {\n    width: 100,\n    height: 100,\n    borderRadius: 20,\n    marginVertical: 64,\n  },\n});\n",h={sidebar_position:3},b="transitionDuration",x={unversionedId:"css-transitions/transition-duration",id:"css-transitions/transition-duration",title:"transitionDuration",description:"transitionDuration lets you specify the length of time the transition lasts. Defaults to 0.",source:"@site/docs/css-transitions/transition-duration.mdx",sourceDirName:"css-transitions",slug:"/css-transitions/transition-duration",permalink:"/react-native-reanimated/docs/next/css-transitions/transition-duration",draft:!1,editUrl:"https://github.com/software-mansion/react-native-reanimated/edit/main/packages/docs-reanimated/docs/css-transitions/transition-duration.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"transitionProperty",permalink:"/react-native-reanimated/docs/next/css-transitions/transition-property"},next:{title:"transitionDelay",permalink:"/react-native-reanimated/docs/next/css-transitions/transition-delay"}},w={},v=[{value:"Reference",id:"reference",level:2},{value:"Values",id:"values",level:3},{value:"<code>&lt;time unit&gt;</code>",id:"time-unit",level:4},{value:"<code>&lt;time unit[]&gt;</code>",id:"time-unit-1",level:4},{value:"Example",id:"example",level:2},{value:"Platform compatibility",id:"platform-compatibility",level:2}],C=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.yg)("div",t)},D=C("InteractiveExample"),N=C("Indent"),A=C("PlatformCompatibility"),R={toc:v},k="wrapper";function T(e){let{components:t,...n}=e;return(0,a.yg)(k,(0,i.A)({},R,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"transitionduration"},"transitionDuration"),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"transitionDuration")," lets you specify the length of time the transition lasts. Defaults to ",(0,a.yg)("inlineCode",{parentName:"p"},"0"),"."),(0,a.yg)(D,{src:u,component:d,mdxType:"InteractiveExample"}),(0,a.yg)("h2",{id:"reference"},"Reference"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-javascript"},"function App() {\n  return (\n    <Animated.View\n      style={{\n        transitionProperty: 'fontSize',\n        // highlight-next-line\n        transitionDuration: 500,\n      }}\n    />\n  );\n}\n")),(0,a.yg)("details",null,(0,a.yg)("summary",null,"Type definitions"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-typescript"},"type TimeUnit = `${number}s` | `${number}ms` | number;\n\ntype CSSTransitionDuration = TimeUnit | TimeUnit[];\n"))),(0,a.yg)("h3",{id:"values"},"Values"),(0,a.yg)("h4",{id:"time-unit"},(0,a.yg)("inlineCode",{parentName:"h4"},"<time unit>")),(0,a.yg)("p",null,"A value which is either:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"A string which is a non-negative number followed by ",(0,a.yg)("inlineCode",{parentName:"li"},"s"),". Represents a time in seconds.")),(0,a.yg)(N,{mdxType:"Indent"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-typescript"},"transitionDuration: '3s';\n"))),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"A string which is a non-negative number followed by ",(0,a.yg)("inlineCode",{parentName:"li"},"ms"),". Represents a time in milliseconds.")),(0,a.yg)(N,{mdxType:"Indent"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-typescript"},"transitionDuration: '150ms';\n"))),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"A non-negative number which represents a time in milliseconds.")),(0,a.yg)(N,{mdxType:"Indent"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-typescript"},"transitionDuration: 500;\n"))),(0,a.yg)("h4",{id:"time-unit-1"},(0,a.yg)("inlineCode",{parentName:"h4"},"<time unit[]>")),(0,a.yg)("p",null,"An array of time units. The order in this array corresponds to the array of style properties passed to the ",(0,a.yg)("a",{parentName:"p",href:"docs/next/css-transitions/transition-property#style-property-1"},(0,a.yg)("inlineCode",{parentName:"a"},"transitionProperty")),"."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-typescript"},"// highlight-next-line\ntransitionDuration: ['3s', '150ms', 500];\ntransitionProperty: ['width', 'transform', 'borderRadius'];\n")),(0,a.yg)("p",null,"In the following example, it would take 3 seconds for the ",(0,a.yg)("inlineCode",{parentName:"p"},"width")," property to transition, 100 milliseconds for the ",(0,a.yg)("inlineCode",{parentName:"p"},"transform"),", and 500 milliseconds for the ",(0,a.yg)("inlineCode",{parentName:"p"},"borderRadius"),"."),(0,a.yg)("h2",{id:"example"},"Example"),(0,a.yg)(D,{src:f,component:g,mdxType:"InteractiveExample"}),(0,a.yg)("h2",{id:"platform-compatibility"},"Platform compatibility"),(0,a.yg)(A,{android:!0,ios:!0,web:!0,mdxType:"PlatformCompatibility"}))}T.isMDXComponent=!0},62257:(e,t,n)=>{n.d(t,{A:()=>c});var i=n(96540),r=n(72188),a=n(46413),o=n(78506),s=i.forwardRef(((e,t)=>{var n=e.accessibilityLabel,r=e.color,s=e.disabled,c=e.onPress,d=e.testID,m=e.title;return i.createElement(a.A,{accessibilityLabel:n,accessibilityRole:"button",disabled:s,focusable:!s,onPress:c,ref:t,style:[l.button,r&&{backgroundColor:r},s&&l.buttonDisabled],testID:d},i.createElement(o.A,{style:[l.text,s&&l.textDisabled]},m))}));s.displayName="Button";var l=r.A.create({button:{backgroundColor:"#2196F3",borderRadius:2},text:{color:"#fff",fontWeight:"500",padding:8,textAlign:"center",textTransform:"uppercase"},buttonDisabled:{backgroundColor:"#dfdfdf"},textDisabled:{color:"#a1a1a1"}});const c=s}}]);