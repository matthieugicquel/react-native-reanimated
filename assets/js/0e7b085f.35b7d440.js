"use strict";(self.webpackChunkdocs_reanimated=self.webpackChunkdocs_reanimated||[]).push([[5388],{15680:(e,a,n)=>{n.d(a,{xA:()=>d,yg:()=>g});var t=n(96540);function i(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function r(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){i(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,t,i=function(e,a){if(null==e)return{};var n,t,i={},r=Object.keys(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||(i[n]=e[n]);return i}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=t.createContext({}),m=function(e){var a=t.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):o(o({},a),e)),n},d=function(e){var a=m(e.components);return t.createElement(s.Provider,{value:a},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},c=t.forwardRef((function(e,a){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=m(n),c=i,g=u["".concat(s,".").concat(c)]||u[c]||p[c]||r;return n?t.createElement(g,o(o({ref:a},d),{},{components:n})):t.createElement(g,o({ref:a},d))}));function g(e,a){var n=arguments,i=a&&a.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=c;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=e,l[u]="string"==typeof e?e:i,o[1]=l;for(var m=2;m<r;m++)o[m]=n[m];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}c.displayName="MDXCreateElement"},99200:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>m});var t=n(58168),i=(n(96540),n(15680));const r={},o="Glossary of terms",l={unversionedId:"fundamentals/glossary",id:"version-3.x/fundamentals/glossary",title:"Glossary of terms",description:"Animated component",source:"@site/versioned_docs/version-3.x/fundamentals/glossary.mdx",sourceDirName:"fundamentals",slug:"/fundamentals/glossary",permalink:"/react-native-reanimated/docs/fundamentals/glossary",draft:!1,editUrl:"https://github.com/software-mansion/react-native-reanimated/edit/main/packages/docs-reanimated/versioned_docs/version-3.x/fundamentals/glossary.mdx",tags:[],version:"3.x",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Handling gestures",permalink:"/react-native-reanimated/docs/fundamentals/handling-gestures"},next:{title:"Animations",permalink:"/react-native-reanimated/docs/category/animations"}},s={},m=[{value:"Animated component",id:"animated-component",level:2},{value:"Shared value",id:"shared-value",level:2},{value:"Animatable value",id:"animatable-value",level:2},{value:"Animation function",id:"animation-function",level:2},{value:"Animation modifier",id:"animation-modifier",level:2},{value:"Animation object",id:"animation-object",level:2},{value:"Animations in inline styling",id:"animations-in-inline-styling",level:2},{value:"Layout animation modifier",id:"layout-animation-modifier",level:2},{value:"Worklet",id:"worklet",level:2},{value:"to workletize",id:"to-workletize",level:2},{value:"JavaScript thread",id:"javascript-thread",level:2},{value:"UI thread",id:"ui-thread",level:2},{value:"Reanimated Babel plugin",id:"reanimated-babel-plugin",level:2}],d={toc:m},u="wrapper";function p(e){let{components:a,...n}=e;return(0,i.yg)(u,(0,t.A)({},d,n,{components:a,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"glossary-of-terms"},"Glossary of terms"),(0,i.yg)("h2",{id:"animated-component"},"Animated component"),(0,i.yg)("p",null,"Animated components are components which Reanimated can animate. Reanimated comes with just a handful of built-in components like ",(0,i.yg)("inlineCode",{parentName:"p"},"Animated.View"),", ",(0,i.yg)("inlineCode",{parentName:"p"},"Animated.Text"),", or ",(0,i.yg)("inlineCode",{parentName:"p"},"Animated.ScrollView"),"."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-jsx"},"import Animated from 'react-native-reanimated';\n\nfunction App() {\n  return (\n    <Animated.View\n      style={{\n        width: 100,\n        height: 100,\n        backgroundColor: 'violet',\n      }}\n    />\n  );\n}\n")),(0,i.yg)("p",null,"For components which aren't a part of Reanimated, to make their props and styles animatable, you have to wrap them with ",(0,i.yg)("a",{parentName:"p",href:"/docs/core/createAnimatedComponent"},(0,i.yg)("inlineCode",{parentName:"a"},"createAnimatedComponent")),":"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-jsx"},"import Animated from 'react-native-reanimated';\nimport { Circle } from 'react-native-svg';\n\nconst AnimatedCircle = Animated.createAnimatedComponent(Circle);\n")),(0,i.yg)("h2",{id:"shared-value"},"Shared value"),(0,i.yg)("p",null,"Shared values are a driving factor of all your animations in Reanimated."),(0,i.yg)("p",null,"They are defined using ",(0,i.yg)("a",{parentName:"p",href:"/docs/core/useSharedValue"},(0,i.yg)("inlineCode",{parentName:"a"},"useSharedValue"))," hook:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-javascript"},"import { useSharedValue } from 'react-native-reanimated';\n")),(0,i.yg)("p",null,"and accessed and modified by their ",(0,i.yg)("inlineCode",{parentName:"p"},".value")," property:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-javascript",metastring:"{2,5}","{2,5}":!0},"function App() {\n  const sv = useSharedValue(0);\n\n  const handlePress = () => {\n    sv.value += 10;\n  };\n\n  // rest of your glamorous code \u2728\n}\n")),(0,i.yg)("p",null,"It can be a value of any type. When used, the data stored in a shared value is automatically synchronized between the ",(0,i.yg)("a",{parentName:"p",href:"/docs/fundamentals/glossary#javascript-thread"},"JavaScript thread")," and the ",(0,i.yg)("a",{parentName:"p",href:"/docs/fundamentals/glossary#ui-thread"},"UI thread"),"."),(0,i.yg)("h2",{id:"animatable-value"},"Animatable value"),(0,i.yg)("p",null,"An animatable value refers to a type of value that can be used for animations. These values include numbers, strings, and arrays of numbers."),(0,i.yg)("p",null,"String values can be animated if they are in a specific format, such as ",(0,i.yg)("inlineCode",{parentName:"p"},'"10deg"'),", ",(0,i.yg)("inlineCode",{parentName:"p"},'"21%"'),", or even colors like ",(0,i.yg)("inlineCode",{parentName:"p"},'"#ffaabb"')," or ",(0,i.yg)("inlineCode",{parentName:"p"},'"rgba(100, 200, 100, 0.7)"'),"."),(0,i.yg)("h2",{id:"animation-function"},"Animation function"),(0,i.yg)("p",null,"Animation functions are functions which let you create animations. They are building blocks that describe how your animations should behave."),(0,i.yg)("p",null,"Reanimated comes with 3 built-in animation functions:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"/docs/animations/withSpring"},(0,i.yg)("inlineCode",{parentName:"a"},"withSpring"))," lets you create spring-based animation"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"/docs/animations/withTiming"},(0,i.yg)("inlineCode",{parentName:"a"},"withTiming"))," lets you create an animation based on duration and ",(0,i.yg)("a",{parentName:"li",href:"https://easings.net/"},"easing")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"/docs/animations/withDecay"},(0,i.yg)("inlineCode",{parentName:"a"},"withDecay"))," lets you create animations that mimic objects in motion that move with a given deceleration rate")),(0,i.yg)("p",null,"These functions can be combined with ",(0,i.yg)("a",{parentName:"p",href:"/docs/fundamentals/glossary#animation-modifier"},"animation modifiers")," to create rich and complex animations."),(0,i.yg)("h2",{id:"animation-modifier"},"Animation modifier"),(0,i.yg)("p",null,"Animation modifiers are functions used to customize animations. Also known as higher-order animations."),(0,i.yg)("p",null,"Reanimated comes with 3 built-in modifiers:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"/docs/animations/withDelay"},(0,i.yg)("inlineCode",{parentName:"a"},"withDelay"))," lets you add a delay before the animation starts"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"/docs/animations/withRepeat"},(0,i.yg)("inlineCode",{parentName:"a"},"withRepeat"))," lets you repeat an animation certain number of times"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"/docs/animations/withSequence"},(0,i.yg)("inlineCode",{parentName:"a"},"withSequence"))," lets you chain animation one after the other"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"/docs/animations/withClamp"},(0,i.yg)("inlineCode",{parentName:"a"},"withClamp"))," lets you limit the animation boundaries to a specified range")),(0,i.yg)("h2",{id:"animation-object"},"Animation object"),(0,i.yg)("p",null,"An animation object is a value returned from ",(0,i.yg)("a",{parentName:"p",href:"/docs/fundamentals/glossary#animation-function"},"animation functions")," and ",(0,i.yg)("a",{parentName:"p",href:"/docs/fundamentals/glossary#animation-modifier"},"modifiers")," which holds the current state of the animation including its start and end conditions, as well as a ",(0,i.yg)("inlineCode",{parentName:"p"},"onFrame")," function. These values allow to calculate the animation state for each frame."),(0,i.yg)("p",null,"When you pass an animation object to a ",(0,i.yg)("a",{parentName:"p",href:"/docs/fundamentals/glossary#shared-value"},"shared value")," it is automatically treated as an ",(0,i.yg)("a",{parentName:"p",href:"/docs/fundamentals/glossary#animatable-value"},"animatable value"),"."),(0,i.yg)("p",null,"For example, consider this code:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-javascript"},"sv.value = withSpring(100);\n")),(0,i.yg)("p",null,"Even though, the ",(0,i.yg)("inlineCode",{parentName:"p"},"withSpring")," returns an animation object the final result that is stored in a shared value is just a number."),(0,i.yg)("h2",{id:"animations-in-inline-styling"},"Animations in inline styling"),(0,i.yg)("p",null,"Passing shared values directly to ",(0,i.yg)("inlineCode",{parentName:"p"},"style")," property without the use of ",(0,i.yg)("inlineCode",{parentName:"p"},"useAnimatedStyle"),"."),(0,i.yg)("p",null,"For example:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-jsx"},"function App() {\n  const width = useSharedValue(100);\n\n  return <Animated.View style={{ width }} />;\n}\n")),(0,i.yg)("h2",{id:"layout-animation-modifier"},"Layout animation modifier"),(0,i.yg)("p",null,"Layout animation modifiers are methods used to customize layout animations."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-jsx"},"<Animated.View entering={FadeOutLeft.duration(500).easing(Easing.ease)} />\n")),(0,i.yg)("p",null,"Reanimated comes with plenty of built-in layout animation modifiers. Some of them are:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},".duration(durationMs: number)")," - the length of the animation (in milliseconds)."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},".easing(easingFunction: EasingFunction)")," - an easing function which defines the animation curve."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},".springify()")," - enables the spring-based animation configuration."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},".damping(value: number)")," - decides how quickly a spring stops moving."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},".withCallback(callback: (finished: boolean) => void)")," - the callback that will fire after the animation ends.")),(0,i.yg)("p",null,"For a list of all available modifiers for each animation refer to the documentation of individual layout animation."),(0,i.yg)("h2",{id:"worklet"},"Worklet"),(0,i.yg)("p",null,"Worklets are short-running JavaScript functions that can be run on the ",(0,i.yg)("a",{parentName:"p",href:"/docs/fundamentals/glossary#ui-thread"},"UI thread"),". They can also be run on a JavaScript thread just as you would run a function in your code."),(0,i.yg)("p",null,"Most of the time when working with Reanimated the code is automatically ",(0,i.yg)("a",{parentName:"p",href:"/docs/fundamentals/glossary#to-workletize"},"workletized")," and run on the UI thread by default."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-javascript"},"const style = useAnimatedStyle(() => {\n  console.log('Running on the UI thread');\n  return { opacity: 0.5 };\n});\n")),(0,i.yg)("p",null,"You can create your own worklets using the ",(0,i.yg)("inlineCode",{parentName:"p"},'"worklet";')," directive at the top of a function."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-javascript"},"function myWorklet() {\n  'worklet';\n  console.log('Running on the UI thread');\n}\n")),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"/docs/threading/runOnUI"},(0,i.yg)("inlineCode",{parentName:"a"},"runOnUI"))," lets you manually run worklets on the UI thread:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-javascript"},"function myWorklet(greeting) {\n  'worklet';\n  console.log(`${greeting} from the UI thread`);\n}\n\nfunction onPress() {\n  // highlight-next-line\n  runOnUI(myWorklet)('Howdy');\n}\n")),(0,i.yg)("h2",{id:"to-workletize"},"to workletize"),(0,i.yg)("p",null,"To convert a JavaScript function into a serializable object which can be copied and run over on ",(0,i.yg)("a",{parentName:"p",href:"/docs/fundamentals/glossary#ui-thread"},"UI thread"),"."),(0,i.yg)("p",null,"Functions marked with ",(0,i.yg)("inlineCode",{parentName:"p"},'"worklet";')," directive are automatically picked up and workletized by the Reanimated Babel plugin."),(0,i.yg)("h2",{id:"javascript-thread"},"JavaScript thread"),(0,i.yg)("p",null,"JavaScript thread (or JS thread for short) is responsible for handling JavaScript code execution in the app."),(0,i.yg)("p",null,"This is the primary place where the React Native app code is executed."),(0,i.yg)("h2",{id:"ui-thread"},"UI thread"),(0,i.yg)("p",null,"UI thread is responsible for handling user interface updates. Also known as Main thread."),(0,i.yg)("p",null,"You can learn more about it by reading the ",(0,i.yg)("a",{parentName:"p",href:"https://reactnative.dev/architecture/threading-model"},"Threading model")," article in the official React Native docs."),(0,i.yg)("h2",{id:"reanimated-babel-plugin"},"Reanimated Babel plugin"),(0,i.yg)("p",null,"The plugin performs automatic ",(0,i.yg)("a",{parentName:"p",href:"/docs/fundamentals/glossary#to-workletize"},"workletization")," of certain functions used with Reanimated to reduce the amount of boilerplate code."),(0,i.yg)("p",null,"You can learn the details by reading the ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/software-mansion/react-native-reanimated/blob/main/packages/react-native-worklets/plugin/README-dev.md"},"Reanimated Babel plugin README"),"."))}p.isMDXComponent=!0}}]);